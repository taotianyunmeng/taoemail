 
======================================控件模版浏览=========================================




 1.Control   控件
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  (1) Calendar     日历
      <?xml version="1.0" encoding="utf-16"?>
      <ControlTemplate TargetType="Calendar" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
         <StackPanel Name="PART_Root" HorizontalAlignment="Center">
           <CalendarItem BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" 
                    Background="{TemplateBinding Panel.Background}" Style="{TemplateBinding Calendar.CalendarItemStyle}" Name="PART_CalendarItem" />
         </StackPanel>
      </ControlTemplate>
 --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  (2) CalendarItem   日历项目
       <?xml version="1.0" encoding="utf-16"?>
       <ControlTemplate TargetType="CalendarItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
         <ControlTemplate.Resources>
           <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly=CalendarItem, ResourceId=DayTitleTemplate}">
             <TextBlock Text="" FontFamily="Verdana" FontWeight="Bold" FontSize="9.5" Foreground="#FF333333" Margin="0,6,0,6" HorizontalAlignment
                       ="Center" VerticalAlignment="Center" />
           </DataTemplate>
        </ControlTemplate.Resources>
       <Grid Name="PART_Root">
         <Grid.Resources>
           <SolidColorBrush x:Key="?">#A5FFFFFF</SolidColorBrush>
         </Grid.Resources>
         <VisualStateManager.VisualStateGroups>
         <VisualStateGroup Name="CommonStates" />
         </VisualStateManager.VisualStateGroups>
       <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="1,1,1,1" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
         <Border BorderThickness="2,2,2,2" CornerRadius="1,1,1,1" BorderBrush="#FFFFFFFF">
           <Grid>
             <Grid.ColumnDefinitions>
               <ColumnDefinition Width="Auto" />
               <ColumnDefinition Width="Auto" />
               <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>
          <Grid.Resources>
            <ControlTemplate TargetType="Button" x:Key="×">
              <Grid Cursor="Hand">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup Name="CommonStates" />
                </VisualStateManager.VisualStateGroups>
                <Rectangle Stretch="Fill" Fill="#11E5EBF1" Opacity="1" />
                <Grid>
                  <Path Data="M282.875,231.875L282.875,240.375 288.625,236z" Stretch="Fill" Fill="#FF333333" Name="path" Width="6" Height="10" Margin="0,-6,14,0" HorizontalAlignment="Right" VerticalAlignment="Center" />
                </Grid>
              </Grid>
            </ControlTemplate>
            <ControlTemplate TargetType="Button" x:Key="?">
              <Grid Cursor="Hand">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup Name="CommonStates" />
                </VisualStateManager.VisualStateGroups>
                <Rectangle Stretch="Fill" Fill="#11E5EBF1" Opacity="1" />
                <Grid>
                  <Path Data="M288.75,232.25L288.75,240.625 283,236.625z" Stretch="Fill" Fill="#FF333333" Name="path" Width="6" Height="10" Margin="14,-6,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                </Grid>
              </Grid>
            </ControlTemplate>
            <ControlTemplate TargetType="Button" x:Key="?">
              <Grid Cursor="Hand">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup Name="CommonStates" />
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Name="buttonContent" Margin="1,4,1,9" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextElement.Foreground="#FF333333" />
              </Grid>
            </ControlTemplate>
          </Grid.Resources>
          <Button Name="PART_PreviousButton" Width="28" Height="20" HorizontalAlignment="Left" Focusable="False" Grid.Column="0" Grid.Row="0">
            <Button.Template>
              <ControlTemplate TargetType="Button">
                <Grid Cursor="Hand">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates" />
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle Stretch="Fill" Fill="#11E5EBF1" Opacity="1" />
                  <Grid>
                    <Path Data="M288.75,232.25L288.75,240.625 283,236.625z" Stretch="Fill" Fill="#FF333333" Name="path" Width="6" Height="10" Margin="14,-6,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                  </Grid>
                </Grid>
              </ControlTemplate>
            </Button.Template>
          </Button>
          <Button FontSize="10.5" FontWeight="Bold" Name="PART_HeaderButton" HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" Grid.Column="1" Grid.Row="0">
            <Button.Template>
              <ControlTemplate TargetType="Button">
                <Grid Cursor="Hand">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates" />
                  </VisualStateManager.VisualStateGroups>
                  <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Name="buttonContent" Margin="1,4,1,9" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextElement.Foreground="#FF333333" />
                </Grid>
              </ControlTemplate>
            </Button.Template>
          </Button>
          <Button Name="PART_NextButton" Width="28" Height="20" HorizontalAlignment="Right" Focusable="False" Grid.Column="2" Grid.Row="0">
            <Button.Template>
              <ControlTemplate TargetType="Button">
                <Grid Cursor="Hand">
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="CommonStates" />
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle Stretch="Fill" Fill="#11E5EBF1" Opacity="1" />
                  <Grid>
                    <Path Data="M282.875,231.875L282.875,240.375 288.625,236z" Stretch="Fill" Fill="#FF333333" Name="path" Width="6" Height="10" Margin="0,-6,14,0" HorizontalAlignment="Right" VerticalAlignment="Center" />
                  </Grid>
                </Grid>
              </ControlTemplate>
            </Button.Template>
          </Button>
          <Grid Name="PART_MonthView" Margin="6,-1,6,6" HorizontalAlignment="Center" Visibility="Visible" Grid.Row="1" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
          </Grid>
          <Grid Name="PART_YearView" Margin="6,-3,7,6" HorizontalAlignment="Center" Visibility="Hidden" Grid.Row="1" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
          </Grid>
        </Grid>
      </Border>
    </Border>
    <Rectangle RadiusX="2" RadiusY="2" Stretch="Fill" Fill="#A5FFFFFF" Stroke="#A5FFFFFF" StrokeThickness="1" Name="PART_DisabledVisual" Opacity="0" Visibility="Collapsed" />
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="UIElement.Visibility" TargetName="PART_DisabledVisual">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <DataTrigger Binding="{Binding Path=DisplayMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Calendar, AncestorLevel=1}}" Value="Year">
      <Setter Property="UIElement.Visibility" TargetName="PART_MonthView">
        <Setter.Value>
          <x:Static Member="Visibility.Hidden" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="PART_YearView">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <DataTrigger Binding="{Binding Path=DisplayMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Calendar, AncestorLevel=1}}" Value="Decade">
      <Setter Property="UIElement.Visibility" TargetName="PART_MonthView">
        <Setter.Value>
          <x:Static Member="Visibility.Hidden" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="PART_YearView">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
    </DataTrigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   (3) ContentControl            控件内容
      (3.1) ButtonBase           按钮基础 
           (3.1.1) Button        按钮
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                (3.1.1.1) CalendarButton       按钮日历
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="CalendarButton" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Grid>
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup Name="CommonStates" />
      <VisualStateGroup Name="SelectionStates" />
      <VisualStateGroup Name="ActiveStates" />
      <VisualStateGroup Name="CalendarButtonFocusStates" />
    </VisualStateManager.VisualStateGroups>
    <Rectangle RadiusX="1" RadiusY="1" Fill="{TemplateBinding Panel.Background}" Name="SelectedBackground" Opacity="0" />
    <Rectangle RadiusX="1" RadiusY="1" Fill="{TemplateBinding Panel.Background}" Name="Background" Opacity="0" />
    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="NormalText" Margin="1,0,1,1" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextElement.Foreground="#FF333333" />
    <Rectangle RadiusX="1" RadiusY="1" Stroke="#FF45D6FA" Name="CalendarButtonFocusVisual" Visibility="Collapsed" IsHitTestVisible="False" />
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="UIElement.IsFocused">
      <Setter Property="UIElement.Visibility" TargetName="CalendarButtonFocusVisual">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
             (3.1.1.1) CalendarDayButton     每日按钮日历
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="CalendarDayButton" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Grid>
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup Name="CommonStates" />
      <VisualStateGroup Name="SelectionStates" />
      <VisualStateGroup Name="CalendarButtonFocusStates" />
      <VisualStateGroup Name="ActiveStates" />
      <VisualStateGroup Name="DayStates" />
      <VisualStateGroup Name="BlackoutDayStates" />
    </VisualStateManager.VisualStateGroups>
    <Rectangle RadiusX="1" RadiusY="1" Fill="#FFAAAAAA" Name="TodayBackground" Opacity="0" />
    <Rectangle RadiusX="1" RadiusY="1" Fill="#FFBADDE9" Name="SelectedBackground" Opacity="0" />
    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" />
    <Rectangle RadiusX="1" RadiusY="1" Fill="#FFBADDE9" Name="HighlightBackground" Opacity="0" />
    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="NormalText" Margin="5,1,5,1" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" TextElement.Foreground="#FF333333" />
    <Path Data="M8.1772461,11.029181L10.433105,11.029181 11.700684,12.801641 12.973633,11.029181 15.191895,11.029181 12.844727,13.999395 15.21875,17.060919 12.962891,17.060919 11.673828,15.256231 10.352539,17.060919 8.1396484,17.060919 10.519043,14.042364z" Stretch="Fill" Fill="#FF000000" Name="Blackout" Margin="3,3,3,3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Opacity="0" />
    <Rectangle RadiusX="1" RadiusY="1" Stroke="#FF45D6FA" Name="DayButtonFocusVisual" Visibility="Collapsed" IsHitTestVisible="False" />
  </Grid>
</ControlTemplate>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        (3.1.2) DataGridColumnHeader          数据网格菜单（横向）
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="DataGridColumnHeader" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:s="clr-namespace:System;assembly=mscorlib">
  <Grid>
    <mwt:DataGridHeaderBorder IsHovered="{TemplateBinding UIElement.IsMouseOver}" IsPressed="{TemplateBinding ButtonBase.IsPressed}" IsClickable="{TemplateBinding DataGridColumnHeader.CanUserSort}" SortDirection="{TemplateBinding DataGridColumnHeader.SortDirection}" SeparatorBrush="{TemplateBinding DataGridColumnHeader.SeparatorBrush}" SeparatorVisibility="{TemplateBinding DataGridColumnHeader.SeparatorVisibility}" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
      <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
    </mwt:DataGridHeaderBorder>
    <Thumb Name="PART_LeftHeaderGripper" HorizontalAlignment="Left">
      <Thumb.Style>
        <Style TargetType="Thumb">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="FrameworkElement.Width">
            <Setter.Value>
              <s:Double>8</s:Double>
            </Setter.Value>
          </Setter>
          <Setter Property="Panel.Background">
            <Setter.Value>
              <SolidColorBrush>#00FFFFFF</SolidColorBrush>
            </Setter.Value>
          </Setter>
          <Setter Property="FrameworkElement.Cursor">
            <Setter.Value>
              <Cursor>SizeWE</Cursor>
            </Setter.Value>
          </Setter>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="Thumb">
                <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Panel.Background}" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Thumb.Style>
    </Thumb>
    <Thumb Name="PART_RightHeaderGripper" HorizontalAlignment="Right">
      <Thumb.Style>
        <Style TargetType="Thumb">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="FrameworkElement.Width">
            <Setter.Value>
              <s:Double>8</s:Double>
            </Setter.Value>
          </Setter>
          <Setter Property="Panel.Background">
            <Setter.Value>
              <SolidColorBrush>#00FFFFFF</SolidColorBrush>
            </Setter.Value>
          </Setter>
          <Setter Property="FrameworkElement.Cursor">
            <Setter.Value>
              <Cursor>SizeWE</Cursor>
            </Setter.Value>
          </Setter>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="Thumb">
                <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Panel.Background}" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Thumb.Style>
    </Thumb>
  </Grid>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
         (3.1.3)DataGridRowHeader              数据网格菜单（行向）
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="DataGridRowHeader" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
  <Grid>
    <mwt:DataGridHeaderBorder IsHovered="{TemplateBinding UIElement.IsMouseOver}" IsPressed="{TemplateBinding ButtonBase.IsPressed}" IsSelected="{TemplateBinding DataGridRowHeader.IsRowSelected}" Orientation="Horizontal" SeparatorBrush="{TemplateBinding DataGridRowHeader.SeparatorBrush}" SeparatorVisibility="{TemplateBinding DataGridRowHeader.SeparatorVisibility}" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
      <StackPanel Orientation="Horizontal">
        <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <Control Template="{x:Null}" Visibility="Visible" SnapsToDevicePixels="False" />
      </StackPanel>
    </mwt:DataGridHeaderBorder>
    <Thumb Name="PART_TopHeaderGripper" VerticalAlignment="Top">
      <Thumb.Style>
        <Style TargetType="Thumb">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="FrameworkElement.Height">
            <Setter.Value>
              <s:Double>8</s:Double>
            </Setter.Value>
          </Setter>
          <Setter Property="Panel.Background">
            <Setter.Value>
              <SolidColorBrush>#00FFFFFF</SolidColorBrush>
            </Setter.Value>
          </Setter>
          <Setter Property="FrameworkElement.Cursor">
            <Setter.Value>
              <Cursor>SizeNS</Cursor>
            </Setter.Value>
          </Setter>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="Thumb">
                <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Panel.Background}" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Thumb.Style>
    </Thumb>
    <Thumb Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom">
      <Thumb.Style>
        <Style TargetType="Thumb">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="FrameworkElement.Height">
            <Setter.Value>
              <s:Double>8</s:Double>
            </Setter.Value>
          </Setter>
          <Setter Property="Panel.Background">
            <Setter.Value>
              <SolidColorBrush>#00FFFFFF</SolidColorBrush>
            </Setter.Value>
          </Setter>
          <Setter Property="FrameworkElement.Cursor">
            <Setter.Value>
              <Cursor>SizeNS</Cursor>
            </Setter.Value>
          </Setter>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="Thumb">
                <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Panel.Background}" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Thumb.Style>
    </Thumb>
  </Grid>
</ControlTemplate>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
       (3.1.4) GridViewColumnHeader                
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="GridViewColumnHeader" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Grid SnapsToDevicePixels="True">
    <Border BorderThickness="0,1,0,1" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="HeaderBorder">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition MaxHeight="7" />
          <RowDefinition />
        </Grid.RowDefinitions>
        <Rectangle Fill="#FFE3F7FF" Name="UpperHighlight" Visibility="Collapsed" />
        <Border Padding="{TemplateBinding Control.Padding}" Grid.RowSpan="2">
          <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="HeaderContent" Margin="0,0,0,1" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </Border>
      </Grid>
    </Border>
    <Border BorderThickness="1,0,1,1" Name="HeaderHoverBorder" Margin="1,1,0,0" />
    <Border BorderThickness="1,1,1,0" Name="HeaderPressBorder" Margin="1,0,0,1" />
    <Canvas>
      <Thumb Name="PART_HeaderGripper">
        <Thumb.Style>
          <Style TargetType="Thumb">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Canvas.Right">
              <Setter.Value>
                <s:Double>-9</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Width">
              <Setter.Value>
                <s:Double>18</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Height">
              <Setter.Value>
                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Padding">
              <Setter.Value>
                <Thickness>0,0,0,0</Thickness>
              </Setter.Value>
            </Setter>
            <Setter Property="Panel.Background">
              <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <LinearGradientBrush.GradientStops>
                    <GradientStop Color="#FFF2F2F2" Offset="0" />
                    <GradientStop Color="#FFD5D5D5" Offset="1" />
                  </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                  <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF">
                    <Rectangle Fill="{TemplateBinding Panel.Background}" Width="1" HorizontalAlignment="Center" />
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Thumb.Style>
      </Thumb>
    </Canvas>
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="UIElement.IsMouseOver">
      <Setter Property="Panel.Background" TargetName="HeaderBorder">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="#FFBDEDFF" Offset="0" />
              <GradientStop Color="#FFB7E7FB" Offset="1" />
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="HeaderHoverBorder">
        <Setter.Value>
          <SolidColorBrush>#FF88CBEB</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="UpperHighlight">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="PART_HeaderGripper">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="ButtonBase.IsPressed">
      <Setter Property="Panel.Background" TargetName="HeaderBorder">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="#FF8DD6F7" Offset="0" />
              <GradientStop Color="#FF8AD1F5" Offset="1" />
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="HeaderHoverBorder">
        <Setter.Value>
          <SolidColorBrush>#FF95DAF9</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="HeaderPressBorder">
        <Setter.Value>
          <SolidColorBrush>#FF7A9EB1</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="UpperHighlight">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Setter Property="Shape.Fill" TargetName="UpperHighlight">
        <Setter.Value>
          <SolidColorBrush>#FFBCE4F9</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="PART_HeaderGripper">
        <Setter.Value>
          <x:Static Member="Visibility.Hidden" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="HeaderContent">
        <Setter.Value>
          <Thickness>1,1,0,0</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="FrameworkElement.Height">
      <Setter Property="FrameworkElement.MinHeight">
        <Setter.Value>
          <s:Double>20</s:Double>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Double>NaN</s:Double>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      (3.1.5) RepeatButton
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="ButtonBase" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <mwt:ButtonChrome Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" Name="Chrome" SnapsToDevicePixels="True">
    <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
  </mwt:ButtonChrome>
  <ControlTemplate.Triggers>
    <Trigger Property="UIElement.IsKeyboardFocused">
      <Setter Property="mwt:ButtonChrome.RenderDefaulted" TargetName="Chrome">
        <Setter.Value>
          <s:Boolean>True</s:Boolean>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="ToggleButton.IsChecked">
      <Setter Property="mwt:ButtonChrome.RenderPressed" TargetName="Chrome">
        <Setter.Value>
          <s:Boolean>True</s:Boolean>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <SolidColorBrush>#FFADADAD</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     (3.1.6) ToggleButton
          (3.1.6.1) CheckBox
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="CheckBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <BulletDecorator Background="#00FFFFFF" SnapsToDevicePixels="True">
    <BulletDecorator.Bullet>
      <mwt:BulletChrome Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" IsChecked="{TemplateBinding ToggleButton.IsChecked}" />
    </BulletDecorator.Bullet>
    <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
  </BulletDecorator>
  <ControlTemplate.Triggers>
    <Trigger Property="ContentControl.HasContent">
      <Setter Property="FrameworkElement.FocusVisualStyle">
        <Setter.Value>
          <Style TargetType="IFrameworkInputElement">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate>
                  <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="14,0,0,0" SnapsToDevicePixels="True" />
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
      <Setter Property="Control.Padding">
        <Setter.Value>
          <Thickness>4,0,0,0</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
          (3.1.6.2) RadioButton
      <?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="RadioButton" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <BulletDecorator Background="#00FFFFFF">
    <BulletDecorator.Bullet>
      <mwt:BulletChrome Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" IsChecked="{TemplateBinding ToggleButton.IsChecked}" IsRound="True" />
    </BulletDecorator.Bullet>
    <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
  </BulletDecorator>
  <ControlTemplate.Triggers>
    <Trigger Property="ContentControl.HasContent">
      <Setter Property="FrameworkElement.FocusVisualStyle">
        <Setter.Value>
          <Style TargetType="IFrameworkInputElement">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate>
                  <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="14,0,0,0" SnapsToDevicePixels="True" />
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
      <Setter Property="Control.Padding">
        <Setter.Value>
          <Thickness>4,0,0,0</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
       (3.1.7) DataGridCell
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="DataGridCell" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
  </Border>
</ControlTemplate>
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
       (3.1.8) Frame
      <?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="Frame" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="PART_FrameCP" />
  </Border>
</ControlTemplate>
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        (3.1.9) GroupItem
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="GroupItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <StackPanel>
    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="PART_Header" />
    <ItemsPresenter Name="ItemsPresenter" Margin="5,0,0,0" />
  </StackPanel>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         (3.1.10) HeaderedContentControl
              (3.1.10.1) Expander 
          <?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="Expander" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="3,3,3,3" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
    <DockPanel>
      <ToggleButton IsChecked="False" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" Foreground="{TemplateBinding TextElement.Foreground}" FontFamily="{TemplateBinding TextElement.FontFamily}" FontSize="{TemplateBinding TextElement.FontSize}" FontStretch="{TemplateBinding TextElement.FontStretch}" FontStyle="{TemplateBinding TextElement.FontStyle}" FontWeight="{TemplateBinding TextElement.FontWeight}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Padding="{TemplateBinding Control.Padding}" Name="HeaderSite" MinWidth="0" MinHeight="0" Margin="1,1,1,1" DockPanel.Dock="Top">
        <ToggleButton.Style>
          <Style TargetType="ToggleButton">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                  <Border Padding="{TemplateBinding Control.Padding}">
                    <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="19" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Ellipse Fill="#00FFFFFF" Stroke="#FFA9A9A9" Name="circle" Width="19" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center" />
                      <Path Data="M1,1.5L4.5,5 8,1.5" Stroke="#FF666666" StrokeThickness="2" Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="False" />
                      <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True" Grid.Column="1" />
                    </Grid>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsChecked">
                      <Setter Property="Path.Data" TargetName="arrow">
                        <Setter.Value>
                          <StreamGeometry>M1,4.5L4.5,1 8,4.5</StreamGeometry>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Shape.Stroke" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Fill" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FF222222</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="ButtonBase.IsPressed">
                      <Setter Property="Shape.Stroke" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#FF526C7B</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.StrokeThickness" TargetName="circle">
                        <Setter.Value>
                          <s:Double>1.5</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Fill" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FF003366</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Shape.Stroke" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#FFA9A9A9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Fill" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FF666666</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </ToggleButton.Style>
        <ToggleButton.FocusVisualStyle>
          <Style TargetType="IFrameworkInputElement">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate>
                  <Border>
                    <Rectangle Stroke="#FF000000" StrokeThickness="1" StrokeDashArray="1 2" Margin="0,0,0,0" SnapsToDevicePixels="True" />
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </ToggleButton.FocusVisualStyle>
      </ToggleButton>
      <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="ExpandSite" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Visibility="Collapsed" Focusable="False" DockPanel.Dock="Bottom" />
    </DockPanel>
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="Expander.IsExpanded">
      <Setter Property="UIElement.Visibility" TargetName="ExpandSite">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Expander.ExpandDirection">
      <Setter Property="DockPanel.Dock" TargetName="ExpandSite">
        <Setter.Value>
          <x:Static Member="Dock.Right" />
        </Setter.Value>
      </Setter>
      <Setter Property="DockPanel.Dock" TargetName="HeaderSite">
        <Setter.Value>
          <x:Static Member="Dock.Left" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Style" TargetName="HeaderSite">
        <Setter.Value>
          <Style TargetType="ToggleButton">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                  <Border Padding="{TemplateBinding Control.Padding}">
                    <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="19" />
                        <RowDefinition Height="*" />
                      </Grid.RowDefinitions>
                      <Grid>
                        <Grid.LayoutTransform>
                          <TransformGroup>
                            <TransformGroup.Children>
                              <RotateTransform Angle="-90" />
                            </TransformGroup.Children>
                          </TransformGroup>
                        </Grid.LayoutTransform>
                        <Ellipse Fill="#00FFFFFF" Stroke="#FFA9A9A9" Name="circle" Width="19" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Path Data="M1,1.5L4.5,5 8,1.5" Stroke="#FF666666" StrokeThickness="2" Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="False" />
                      </Grid>
                      <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" SnapsToDevicePixels="True" Grid.Row="1" />
                    </Grid>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsChecked">
                      <Setter Property="Path.Data" TargetName="arrow">
                        <Setter.Value>
                          <StreamGeometry>M1,4.5L4.5,1 8,4.5</StreamGeometry>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Shape.Stroke" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Fill" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FF222222</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="ButtonBase.IsPressed">
                      <Setter Property="Shape.Stroke" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#FF526C7B</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.StrokeThickness" TargetName="circle">
                        <Setter.Value>
                          <s:Double>1.5</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Fill" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FF003366</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Shape.Stroke" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#FFA9A9A9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Fill" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FF666666</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="ExpandDirection.Right" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Expander.ExpandDirection">
      <Setter Property="DockPanel.Dock" TargetName="ExpandSite">
        <Setter.Value>
          <x:Static Member="Dock.Top" />
        </Setter.Value>
      </Setter>
      <Setter Property="DockPanel.Dock" TargetName="HeaderSite">
        <Setter.Value>
          <x:Static Member="Dock.Bottom" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Style" TargetName="HeaderSite">
        <Setter.Value>
          <Style TargetType="ToggleButton">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                  <Border Padding="{TemplateBinding Control.Padding}">
                    <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="19" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Grid>
                        <Grid.LayoutTransform>
                          <TransformGroup>
                            <TransformGroup.Children>
                              <RotateTransform Angle="180" />
                            </TransformGroup.Children>
                          </TransformGroup>
                        </Grid.LayoutTransform>
                        <Ellipse Fill="#00FFFFFF" Stroke="#FFA9A9A9" Name="circle" Width="19" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Path Data="M1,1.5L4.5,5 8,1.5" Stroke="#FF666666" StrokeThickness="2" Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="False" />
                      </Grid>
                      <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True" Grid.Column="1" />
                    </Grid>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsChecked">
                      <Setter Property="Path.Data" TargetName="arrow">
                        <Setter.Value>
                          <StreamGeometry>M1,4.5L4.5,1 8,4.5</StreamGeometry>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Shape.Stroke" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Fill" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FF222222</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="ButtonBase.IsPressed">
                      <Setter Property="Shape.Stroke" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#FF526C7B</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.StrokeThickness" TargetName="circle">
                        <Setter.Value>
                          <s:Double>1.5</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Fill" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FF003366</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Shape.Stroke" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#FFA9A9A9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Fill" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FF666666</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="ExpandDirection.Up" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Expander.ExpandDirection">
      <Setter Property="DockPanel.Dock" TargetName="ExpandSite">
        <Setter.Value>
          <x:Static Member="Dock.Left" />
        </Setter.Value>
      </Setter>
      <Setter Property="DockPanel.Dock" TargetName="HeaderSite">
        <Setter.Value>
          <x:Static Member="Dock.Right" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Style" TargetName="HeaderSite">
        <Setter.Value>
          <Style TargetType="ToggleButton">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                  <Border Padding="{TemplateBinding Control.Padding}">
                    <Grid Background="#00FFFFFF" SnapsToDevicePixels="False">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="19" />
                        <RowDefinition Height="*" />
                      </Grid.RowDefinitions>
                      <Grid>
                        <Grid.LayoutTransform>
                          <TransformGroup>
                            <TransformGroup.Children>
                              <RotateTransform Angle="90" />
                            </TransformGroup.Children>
                          </TransformGroup>
                        </Grid.LayoutTransform>
                        <Ellipse Fill="#00FFFFFF" Stroke="#FFA9A9A9" Name="circle" Width="19" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Path Data="M1,1.5L4.5,5 8,1.5" Stroke="#FF666666" StrokeThickness="2" Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="False" />
                      </Grid>
                      <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" SnapsToDevicePixels="True" Grid.Row="1" />
                    </Grid>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsChecked">
                      <Setter Property="Path.Data" TargetName="arrow">
                        <Setter.Value>
                          <StreamGeometry>M1,4.5L4.5,1 8,4.5</StreamGeometry>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Shape.Stroke" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Fill" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FF222222</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="ButtonBase.IsPressed">
                      <Setter Property="Shape.Stroke" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#FF526C7B</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.StrokeThickness" TargetName="circle">
                        <Setter.Value>
                          <s:Double>1.5</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Fill" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FF003366</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Shape.Stroke" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#FFA9A9A9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Fill" TargetName="circle">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FF666666</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="ExpandDirection.Left" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (3.1.10.2) GroupBox
                 <?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="GroupBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Grid SnapsToDevicePixels="True">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="6" />
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="6" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="6" />
    </Grid.RowDefinitions>
    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="4,4,4,4" BorderBrush="#00FFFFFF" Background="{TemplateBinding Panel.Background}" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4" Grid.RowSpan="3" />
    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="4,4,4,4" BorderBrush="#FFFFFFFF" OpacityMask="{x:Null}" Grid.Row="1" Grid.ColumnSpan="4" Grid.RowSpan="3">
      <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="3,3,3,3" BorderBrush="{TemplateBinding Border.BorderBrush}">
        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="2,2,2,2" BorderBrush="#FFFFFFFF" />
      </Border>
    </Border>
    <Border Padding="3,1,3,0" Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2">
      <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
    </Border>
    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" />
  </Grid>
</ControlTemplate>
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (3.1.10.3) TabItem
     <?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="TabItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Grid SnapsToDevicePixels="True">
    <Border BorderThickness="1,1,1,0" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd">
      <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" ContentSource="Header" Name="Content" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
    </Border>
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="UIElement.IsMouseOver">
      <Setter Property="Panel.Background" TargetName="Bd">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="#FFEAF6FD" Offset="0.15" />
              <GradientStop Color="#FFD9F0FC" Offset="0.5" />
              <GradientStop Color="#FFBEE6FD" Offset="0.5" />
              <GradientStop Color="#FFA7D9F5" Offset="1" />
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Selector.IsSelected">
      <Setter Property="Panel.ZIndex">
        <Setter.Value>
          <s:Int32>1</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="Bd">
        <Setter.Value>
          <SolidColorBrush>#FFF9F9F9</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="Selector.IsSelected">
          <Condition.Value>
            <s:Boolean>False</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="UIElement.IsMouseOver">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="Border.BorderBrush" TargetName="Bd">
        <Setter.Value>
          <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <Trigger Property="TabItem.TabStripPlacement">
      <Setter Property="Border.BorderThickness" TargetName="Bd">
        <Setter.Value>
          <Thickness>1,0,1,1</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="Dock.Bottom" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="TabItem.TabStripPlacement">
      <Setter Property="Border.BorderThickness" TargetName="Bd">
        <Setter.Value>
          <Thickness>1,1,0,1</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="Dock.Left" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="TabItem.TabStripPlacement">
      <Setter Property="Border.BorderThickness" TargetName="Bd">
        <Setter.Value>
          <Thickness>0,1,1,1</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="Dock.Right" />
      </Trigger.Value>
    </Trigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="Selector.IsSelected">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Top}" />
      </MultiTrigger.Conditions>
      <Setter Property="FrameworkElement.Margin">
        <Setter.Value>
          <Thickness>-2,-2,-2,-1</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="Content">
        <Setter.Value>
          <Thickness>0,0,0,1</Thickness>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="Selector.IsSelected">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Bottom}" />
      </MultiTrigger.Conditions>
      <Setter Property="FrameworkElement.Margin">
        <Setter.Value>
          <Thickness>-2,-1,-2,-2</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="Content">
        <Setter.Value>
          <Thickness>0,1,0,0</Thickness>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="Selector.IsSelected">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Left}" />
      </MultiTrigger.Conditions>
      <Setter Property="FrameworkElement.Margin">
        <Setter.Value>
          <Thickness>-2,-2,-1,-2</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="Content">
        <Setter.Value>
          <Thickness>0,0,1,0</Thickness>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="Selector.IsSelected">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Right}" />
      </MultiTrigger.Conditions>
      <Setter Property="FrameworkElement.Margin">
        <Setter.Value>
          <Thickness>-1,-2,-2,-2</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="Content">
        <Setter.Value>
          <Thickness>1,0,0,0</Thickness>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="Panel.Background" TargetName="Bd">
        <Setter.Value>
          <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="Bd">
        <Setter.Value>
          <SolidColorBrush>#FFC9C7BA</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
          (3.1.11) Label
        <?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="Label" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
    <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (3.1.12) ListBoxItem
                  (3.1.12.1) ComboBoxItem
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="ComboBoxItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="ComboBoxItem.IsHighlighted">
      <Setter Property="Panel.Background" TargetName="Bd">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (3.1.12.2) ListViewItem
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="ListBoxItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="Selector.IsSelected">
      <Setter Property="Panel.Background" TargetName="Bd">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="Selector.IsSelected">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="Selector.IsSelectionActive">
          <Condition.Value>
            <s:Boolean>False</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="Panel.Background" TargetName="Bd">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
          (3.1.13) ScrollViewer
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="ScrollViewer" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Grid Background="{TemplateBinding Panel.Background}">
    <ColumnDefinition Width="*" />
    <ColumnDefinition Width="Auto" />
    <RowDefinition Height="*" />
    <RowDefinition Height="Auto" />
    <Rectangle Grid.Column="1" Grid.Row="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Control.Padding}" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" />
    <ScrollBar Grid.Column="1" Grid.Row="0" Minimum="0" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Cursor="Arrow" AutomationProperties.AutomationId="VerticalScrollBar" />
    <ScrollBar Orientation="Horizontal" Grid.Column="0" Grid.Row="1" Minimum="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" AutomationProperties.AutomationId="HorizontalScrollBar" />
  </Grid>
</ControlTemplate>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
           (3.1.14) StatusBarItem
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="StatusBarItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
          (3.1.15) ToolTip
<< Error generating template:“ToolTip”不能有逻辑或视觉父级。>>
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
          (3.1.16) UserControl
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="UserControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
  </Border>
</ControlTemplate>
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
          (3.1.17)  Window
              (3.1.17.1)  NavigationWindow
<< Error generating template:Window 必须是树的根目录。不能将 Window 添加为 Visual 的子目录。>>
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
          (4) DataGridRow
 <?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="DataGridRow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="DGR_Border" SnapsToDevicePixels="True">
    <SelectiveScrollingGrid>
      <SelectiveScrollingGrid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </SelectiveScrollingGrid.ColumnDefinitions>
      <SelectiveScrollingGrid.RowDefinitions>
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </SelectiveScrollingGrid.RowDefinitions>
      <DataGridCellsPresenter ItemsPanel="{TemplateBinding ItemsControl.ItemsPanel}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.Column="1" />
      <DataGridDetailsPresenter Visibility="{TemplateBinding DataGridRow.DetailsVisibility}" Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="Both" />
      <DataGridRowHeader Visibility="Visible" Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" />
    </SelectiveScrollingGrid>
  </Border>
</ControlTemplate>
------------------------------------------------------------------------------------------------------------------------------------------------------------------
          (5) DataPicker
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="DatePicker" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup Name="CommonStates" />
    </VisualStateManager.VisualStateGroups>
    <Grid Name="PART_Root" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Grid.Resources>
        <ControlTemplate TargetType="Button" x:Key="é">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="CommonStates" />
            </VisualStateManager.VisualStateGroups>
            <Grid Background="#11FFFFFF" Width="19" Height="18" FlowDirection="LeftToRight" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*" />
                <ColumnDefinition Width="20*" />
                <ColumnDefinition Width="20*" />
                <ColumnDefinition Width="20*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="23*" />
                <RowDefinition Height="19*" />
                <RowDefinition Height="19*" />
                <RowDefinition Height="19*" />
              </Grid.RowDefinitions>
              <Border BorderThickness="1,1,1,1" CornerRadius="0,0,1,1" BorderBrush="#FF45D6FA" Name="Highlight" Margin="-1,-1,-1,-1" Opacity="0" Grid.Row="0" Grid.ColumnSpan="4" Grid.RowSpan="4" />
              <Border BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5" BorderBrush="#FFFFFFFF" Background="#FF1F3B53" Name="Background" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.ColumnSpan="4" Grid.RowSpan="3" />
              <Border BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5" BorderBrush="#BF000000" Name="BackgroundGradient" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.ColumnSpan="4" Grid.RowSpan="3">
                <Border.Background>
                  <LinearGradientBrush StartPoint="0.7,0" EndPoint="0.7,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#FFFFFFFF" Offset="0" />
                      <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                      <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                      <GradientStop Color="#C6FFFFFF" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Border.Background>
              </Border>
              <Rectangle StrokeThickness="1" Grid.ColumnSpan="4" Grid.RowSpan="1">
                <Rectangle.Fill>
                  <LinearGradientBrush StartPoint="0.46,1.6" EndPoint="0.3,-1.1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#FF4084BD" />
                      <GradientStop Color="#FFAFCFEA" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Rectangle.Fill>
                <Rectangle.Stroke>
                  <LinearGradientBrush StartPoint="0.48,1.25" EndPoint="0.48,-1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#FF494949" />
                      <GradientStop Color="#FF9F9F9F" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Rectangle.Stroke>
              </Rectangle>
              <Path Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z" Stretch="Fill" Fill="#FF2F2F2F" Margin="4,3,4,3" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4" Grid.RowSpan="3" />
              <Ellipse Fill="#FFFFFFFF" StrokeThickness="0" Width="3" Height="3" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="4" />
              <Border BorderThickness="1,1,1,1" CornerRadius="0,0,0.5,0.5" BorderBrush="#B2FFFFFF" Name="DisabledVisual" Opacity="0" Grid.Row="0" Grid.ColumnSpan="4" Grid.RowSpan="4" />
            </Grid>
          </Grid>
        </ControlTemplate>
        <SolidColorBrush x:Key="è">#A5FFFFFF</SolidColorBrush>
      </Grid.Resources>
      <Button Foreground="{TemplateBinding TextElement.Foreground}" Name="PART_Button" Width="20" Margin="3,0,3,0" HorizontalAlignment="Left" VerticalAlignment="Top" Focusable="False" Grid.Column="1" Grid.Row="0">
        <Button.Template>
          <ControlTemplate TargetType="Button">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates" />
              </VisualStateManager.VisualStateGroups>
              <Grid Background="#11FFFFFF" Width="19" Height="18" FlowDirection="LeftToRight" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="20*" />
                  <ColumnDefinition Width="20*" />
                  <ColumnDefinition Width="20*" />
                  <ColumnDefinition Width="20*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="23*" />
                  <RowDefinition Height="19*" />
                  <RowDefinition Height="19*" />
                  <RowDefinition Height="19*" />
                </Grid.RowDefinitions>
                <Border BorderThickness="1,1,1,1" CornerRadius="0,0,1,1" BorderBrush="#FF45D6FA" Name="Highlight" Margin="-1,-1,-1,-1" Opacity="0" Grid.Row="0" Grid.ColumnSpan="4" Grid.RowSpan="4" />
                <Border BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5" BorderBrush="#FFFFFFFF" Background="#FF1F3B53" Name="Background" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.ColumnSpan="4" Grid.RowSpan="3" />
                <Border BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5" BorderBrush="#BF000000" Name="BackgroundGradient" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.ColumnSpan="4" Grid.RowSpan="3">
                  <Border.Background>
                    <LinearGradientBrush StartPoint="0.7,0" EndPoint="0.7,1">
                      <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                        <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                        <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                        <GradientStop Color="#C6FFFFFF" Offset="1" />
                      </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </Border.Background>
                </Border>
                <Rectangle StrokeThickness="1" Grid.ColumnSpan="4" Grid.RowSpan="1">
                  <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0.46,1.6" EndPoint="0.3,-1.1">
                      <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#FF4084BD" />
                        <GradientStop Color="#FFAFCFEA" Offset="1" />
                      </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </Rectangle.Fill>
                  <Rectangle.Stroke>
                    <LinearGradientBrush StartPoint="0.48,1.25" EndPoint="0.48,-1">
                      <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#FF494949" />
                        <GradientStop Color="#FF9F9F9F" Offset="1" />
                      </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </Rectangle.Stroke>
                </Rectangle>
                <Path Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z" Stretch="Fill" Fill="#FF2F2F2F" Margin="4,3,4,3" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4" Grid.RowSpan="3" />
                <Ellipse Fill="#FFFFFFFF" StrokeThickness="0" Width="3" Height="3" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.ColumnSpan="4" />
                <Border BorderThickness="1,1,1,1" CornerRadius="0,0,0.5,0.5" BorderBrush="#B2FFFFFF" Name="DisabledVisual" Opacity="0" Grid.Row="0" Grid.ColumnSpan="4" Grid.RowSpan="4" />
              </Grid>
            </Grid>
          </ControlTemplate>
        </Button.Template>
      </Button>
      <DatePickerTextBox HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Name="PART_TextBox" Focusable="{TemplateBinding UIElement.Focusable}" Grid.Column="0" Grid.Row="0" xml:space="preserve"></DatePickerTextBox>
      <Grid Name="PART_DisabledVisual" Opacity="0" IsHitTestVisible="False" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Rectangle RadiusX="1" RadiusY="1" Fill="#A5FFFFFF" Grid.Column="0" Grid.Row="0" />
        <Rectangle RadiusX="1" RadiusY="1" Fill="#A5FFFFFF" Width="19" Height="18" Margin="3,0,3,0" Grid.Column="1" Grid.Row="0" />
        <Popup Placement="Bottom" StaysOpen="False" AllowsTransparency="True" Name="PART_Popup" />
      </Grid>
    </Grid>
  </Border>
  <ControlTemplate.Triggers>
    <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="false">
      <Setter Property="TextElement.Foreground" TargetName="PART_TextBox">
        <Setter.Value>
          <Binding Path="Foreground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
    </DataTrigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (6) DocumentViewerBase
              (6.1) DocumentViewer
                  <?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="DocumentViewer" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:swd="clr-namespace:System.Windows.Documents;assembly=PresentationUI" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Focusable="False">
    <Grid Background="{TemplateBinding Panel.Background}" KeyboardNavigation.TabNavigation="Local">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <ContentControl TabIndex="0" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=swd:PresentationUIStyleResources, ResourceId=PUIDocumentViewerToolBarStyleKey}}" Focusable="{TemplateBinding UIElement.Focusable}" Grid.Column="0" Grid.Row="0" />
      <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Auto" TabIndex="1" IsTabStop="True" Name="PART_ContentHost" Focusable="{TemplateBinding UIElement.Focusable}" Grid.Column="0" Grid.Row="1" />
      <DockPanel Grid.Row="1">
        <FrameworkElement Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" DockPanel.Dock="Right" />
        <Rectangle Height="10" VerticalAlignment="Top" Visibility="Visible">
          <Rectangle.Fill>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#66000000" Offset="0" />
                <GradientStop Color="#00FFFFFF" Offset="1" />
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </Rectangle.Fill>
        </Rectangle>
      </DockPanel>
      <ContentControl TabIndex="2" Name="PART_FindToolBarHost" Focusable="{TemplateBinding UIElement.Focusable}" Grid.Column="0" Grid.Row="2" />
    </Grid>
  </Border>
</ControlTemplate>
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
               (6.2) FlowDocumentPageViewer
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="FlowDocumentPageViewer" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <DockPanel LastChildFill="True" xml:lang="zh-cn" x:Uid="DockPanel_2">
    <Grid Background="{TemplateBinding Panel.Background}" HorizontalAlignment="Stretch" x:Uid="Grid_23" DockPanel.Dock="Bottom">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Border Name="PART_FindToolBarHost" HorizontalAlignment="Left" VerticalAlignment="Center" x:Uid="Border_60" Visibility="Collapsed" Grid.Column="0" />
      <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" x:Uid="StackPanel_1" Grid.Column="1">
        <RepeatButton Command="PreviousPage" ToolTip="上一页" x:Uid="RepeatButton_3" IsEnabled="{TemplateBinding DocumentViewerBase.CanGoToPreviousPage}" Focusable="False">
          <RepeatButton.Style>
            <Style TargetType="RepeatButton">
              <Style.BasedOn>
                <Style TargetType="ButtonBase">
                  <Style.Triggers>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>0.3</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>1</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </Style.Triggers>
                  <Style.Resources>
                    <ResourceDictionary />
                  </Style.Resources>
                  <Setter Property="UIElement.Focusable">
                    <Setter.Value>
                      <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="UIElement.Opacity">
                    <Setter.Value>
                      <s:Double>0.5</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.Cursor">
                    <Setter.Value>
                      <Cursor>Hand</Cursor>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Panel.Background">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Padding">
                    <Setter.Value>
                      <Thickness>3,1,3,1</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush">
                    <Setter.Value>
                      <x:Null />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderThickness">
                    <Setter.Value>
                      <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.MinWidth">
                    <Setter.Value>
                      <s:Double>0</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.MinHeight">
                    <Setter.Value>
                      <s:Double>0</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="ButtonBase">
                        <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                          <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="UIElement.RenderTransform" TargetName="Content">
                              <Setter.Value>
                                <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="ButtonBase.IsPressed">
                            <Setter Property="UIElement.RenderTransform" TargetName="Content">
                              <Setter.Value>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Style.BasedOn>
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="Control.Padding">
                <Setter.Value>
                  <Thickness>5,5,5,5</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="RepeatButton.Delay">
                <Setter.Value>
                  <s:Int32>1000</s:Int32>
                </Setter.Value>
              </Setter>
              <Setter Property="RepeatButton.Interval">
                <Setter.Value>
                  <s:Int32>250</s:Int32>
                </Setter.Value>
              </Setter>
            </Style>
          </RepeatButton.Style>
          <Viewbox Height="{TemplateBinding TextElement.FontSize}" x:Uid="Viewbox_5">
            <Path Fill="{TemplateBinding TextElement.Foreground}" x:Uid="Path_15">
              <Path.Data>
                <PathGeometry Figures="M5,0L5,10L0,5z" />
              </Path.Data>
            </Path>
          </Viewbox>
        </RepeatButton>
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" x:Uid="TextBlock_5">
          <Run xml:space="preserve"> </Run>第 <TextBlock Text="" x:Uid="TextBlock_6" /> <Run>/</Run> <TextBlock Text="" x:Uid="TextBlock_7" /> 页<Run xml:space="preserve"> </Run></TextBlock>
        <RepeatButton Command="NextPage" ToolTip="下一页" x:Uid="RepeatButton_4" IsEnabled="{TemplateBinding DocumentViewerBase.CanGoToNextPage}" Focusable="False">
          <RepeatButton.Style>
            <Style TargetType="RepeatButton">
              <Style.BasedOn>
                <Style TargetType="ButtonBase">
                  <Style.Triggers>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>0.3</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>1</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </Style.Triggers>
                  <Style.Resources>
                    <ResourceDictionary />
                  </Style.Resources>
                  <Setter Property="UIElement.Focusable">
                    <Setter.Value>
                      <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="UIElement.Opacity">
                    <Setter.Value>
                      <s:Double>0.5</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.Cursor">
                    <Setter.Value>
                      <Cursor>Hand</Cursor>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Panel.Background">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Padding">
                    <Setter.Value>
                      <Thickness>3,1,3,1</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush">
                    <Setter.Value>
                      <x:Null />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderThickness">
                    <Setter.Value>
                      <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.MinWidth">
                    <Setter.Value>
                      <s:Double>0</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.MinHeight">
                    <Setter.Value>
                      <s:Double>0</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="ButtonBase">
                        <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                          <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="UIElement.RenderTransform" TargetName="Content">
                              <Setter.Value>
                                <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="ButtonBase.IsPressed">
                            <Setter Property="UIElement.RenderTransform" TargetName="Content">
                              <Setter.Value>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Style.BasedOn>
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="Control.Padding">
                <Setter.Value>
                  <Thickness>5,5,5,5</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="RepeatButton.Delay">
                <Setter.Value>
                  <s:Int32>1000</s:Int32>
                </Setter.Value>
              </Setter>
              <Setter Property="RepeatButton.Interval">
                <Setter.Value>
                  <s:Int32>250</s:Int32>
                </Setter.Value>
              </Setter>
            </Style>
          </RepeatButton.Style>
          <Viewbox Height="{TemplateBinding TextElement.FontSize}" x:Uid="Viewbox_6">
            <Path Fill="{TemplateBinding TextElement.Foreground}" x:Uid="Path_16">
              <Path.Data>
                <PathGeometry Figures="M0,0L0,10L5,5z" />
              </Path.Data>
            </Path>
          </Viewbox>
        </RepeatButton>
      </StackPanel>
      <Grid HorizontalAlignment="Right" VerticalAlignment="Center" x:Uid="Grid_24" Grid.Column="2">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <RepeatButton Command="DecreaseZoom" BorderBrush="{TemplateBinding Border.BorderBrush}" Foreground="{TemplateBinding TextElement.Foreground}" Width="{TemplateBinding TextElement.FontSize}" Height="{TemplateBinding TextElement.FontSize}" ToolTip="减小缩放比例" x:Uid="RepeatButton_5" IsEnabled="{TemplateBinding FlowDocumentPageViewer.CanDecreaseZoom}" Focusable="False" Grid.Column="0">
          <RepeatButton.Style>
            <Style TargetType="RepeatButton">
              <Style.BasedOn>
                <Style TargetType="RepeatButton">
                  <Style.BasedOn>
                    <Style TargetType="ButtonBase">
                      <Style.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                          <Setter Property="UIElement.Opacity">
                            <Setter.Value>
                              <s:Double>0.3</s:Double>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>False</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver">
                          <Setter Property="UIElement.Opacity">
                            <Setter.Value>
                              <s:Double>1</s:Double>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                      </Style.Triggers>
                      <Style.Resources>
                        <ResourceDictionary />
                      </Style.Resources>
                      <Setter Property="UIElement.Focusable">
                        <Setter.Value>
                          <s:Boolean>False</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>0.5</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Cursor">
                        <Setter.Value>
                          <Cursor>Hand</Cursor>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Padding">
                        <Setter.Value>
                          <Thickness>3,1,3,1</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush">
                        <Setter.Value>
                          <x:Null />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderThickness">
                        <Setter.Value>
                          <Thickness>0,0,0,0</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.MinWidth">
                        <Setter.Value>
                          <s:Double>0</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.MinHeight">
                        <Setter.Value>
                          <s:Double>0</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="ButtonBase">
                            <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                              <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                            </Border>
                            <ControlTemplate.Triggers>
                              <Trigger Property="UIElement.IsMouseOver">
                                <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                  <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                              <Trigger Property="ButtonBase.IsPressed">
                                <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                  <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </Style.BasedOn>
                  <Style.Resources>
                    <ResourceDictionary />
                  </Style.Resources>
                  <Setter Property="Control.Padding">
                    <Setter.Value>
                      <Thickness>5,5,5,5</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="RepeatButton.Delay">
                    <Setter.Value>
                      <s:Int32>1000</s:Int32>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="RepeatButton.Interval">
                    <Setter.Value>
                      <s:Int32>250</s:Int32>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Style.BasedOn>
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="Control.Padding">
                <Setter.Value>
                  <Thickness>2,2,0,2</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="RepeatButton">
                    <Border Padding="0,0,0,0" Background="#00FFFFFF" x:Uid="Border_41">
                      <Viewbox Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="Viewbox_2">
                        <Canvas Width="32" Height="32" x:Uid="Canvas_4">
                          <Path Fill="{x:Null}" Width="32" Height="32" x:Uid="Path_7">
                            <Path.Data>
                              <GeometryGroup>
                                <GeometryGroup.Children>
                                  <EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
                                </GeometryGroup.Children>
                              </GeometryGroup>
                            </Path.Data>
                          </Path>
                          <Path Name="Sheen" Width="32" Height="32" x:Uid="Path_8">
                            <Path.Data>
                              <GeometryGroup>
                                <GeometryGroup.Children>
                                  <EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
                                </GeometryGroup.Children>
                              </GeometryGroup>
                            </Path.Data>
                            <Path.Fill>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#99FFFFFF" Offset="0" />
                                  <GradientStop Color="#66000000" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Path.Fill>
                          </Path>
                          <Path Stroke="{x:Null}" StrokeThickness="5" x:Uid="Path_9" Canvas.Left="16" Canvas.Top="16">
                            <Path.Data>
                              <LineGeometry StartPoint="-10,0" EndPoint="10,0" />
                            </Path.Data>
                          </Path>
                        </Canvas>
                      </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="UIElement.IsMouseOver">
                        <Setter Property="UIElement.RenderTransform" TargetName="Content">
                          <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="ButtonBase.IsPressed">
                        <Setter Property="UIElement.RenderTransform" TargetName="Content">
                          <Setter.Value>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Shape.Fill" TargetName="Sheen">
                          <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                              <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#99000000" Offset="0" />
                                <GradientStop Color="#66FFFFFF" Offset="1" />
                              </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </RepeatButton.Style>
          <RepeatButton.LayoutTransform>
            <ScaleTransform ScaleX="2.2" ScaleY="2.2" />
          </RepeatButton.LayoutTransform>
        </RepeatButton>
        <Slider TickFrequency="{TemplateBinding FlowDocumentPageViewer.ZoomIncrement}" Minimum="{TemplateBinding FlowDocumentPageViewer.MinZoom}" Maximum="{TemplateBinding FlowDocumentPageViewer.MaxZoom}" Value="0" LargeChange="{TemplateBinding FlowDocumentPageViewer.ZoomIncrement}" SmallChange="{TemplateBinding FlowDocumentPageViewer.ZoomIncrement}" FontSize="{TemplateBinding TextElement.FontSize}" Width="100" HorizontalAlignment="Stretch" VerticalAlignment="Center" x:Uid="Slider_1" Focusable="False" Grid.Column="1">
          <Slider.Style>
            <Style TargetType="Slider">
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="Stylus.IsPressAndHoldEnabled">
                <Setter.Value>
                  <s:Boolean>False</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="UIElement.Focusable">
                <Setter.Value>
                  <s:Boolean>False</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.OverridesDefaultStyle">
                <Setter.Value>
                  <s:Boolean>True</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="Panel.Background">
                <Setter.Value>
                  <Binding Path="Background" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderThickness">
                <Setter.Value>
                  <Thickness>1,1,1,1</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush">
                <Setter.Value>
                  <SolidColorBrush>#00000000</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="TextElement.Foreground">
                <Setter.Value>
                  <Binding Path="Foreground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Slider.IsSnapToTickEnabled">
                <Setter.Value>
                  <s:Boolean>True</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="UIElement.RenderTransformOrigin">
                <Setter.Value>
                  <Point>0.5,0.5</Point>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.MinWidth">
                <Setter.Value>
                  <s:Double>50</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.MinHeight">
                <Setter.Value>
                  <s:Double>0</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.Width">
                <Setter.Value>
                  <s:Double>NaN</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="Control.Padding">
                <Setter.Value>
                  <Thickness>2,0,2,0</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.Height">
                <Setter.Value>
                  <s:Double>NaN</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="UIElement.Opacity">
                <Setter.Value>
                  <s:Double>0.75</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="RepeatButton.Delay">
                <Setter.Value>
                  <s:Int32>1000</s:Int32>
                </Setter.Value>
              </Setter>
              <Setter Property="RepeatButton.Interval">
                <Setter.Value>
                  <s:Int32>250</s:Int32>
                </Setter.Value>
              </Setter>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="Slider">
                    <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF" x:Uid="Border_45">
                      <Grid x:Uid="Grid_22" ClipToBounds="False">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TickBar Fill="{TemplateBinding TextElement.Foreground}" Placement="Top" Name="TopTick" Height="4" x:Uid="TickBar_1" Visibility="Collapsed" Grid.Row="0" />
                        <Border CornerRadius="2,2,2,2" Background="{TemplateBinding TextElement.Foreground}" Height="2" Opacity="0.5" x:Uid="Border_46" Grid.Row="1" />
                        <Canvas Height="4" VerticalAlignment="Center" x:Uid="Canvas_7" Grid.Row="1">
                          <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Name="PART_SelectionRange" Height="2" x:Uid="Rectangle_17" Visibility="Hidden" Canvas.Top="1" />
                        </Canvas>
                        <Track Name="PART_Track" x:Uid="PART_Track" Grid.Row="1">
                          <Track.DecreaseRepeatButton>
                            <RepeatButton x:Uid="RepeatButton_1">
                              <RepeatButton.Command>
                                <RoutedCommand />
                              </RepeatButton.Command>
                              <RepeatButton.Style>
                                <Style TargetType="RepeatButton">
                                  <Style.Resources>
                                    <ResourceDictionary />
                                  </Style.Resources>
                                  <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                    <Setter.Value>
                                      <s:Boolean>True</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="KeyboardNavigation.IsTabStop">
                                    <Setter.Value>
                                      <s:Boolean>False</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="UIElement.Focusable">
                                    <Setter.Value>
                                      <s:Boolean>False</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Control.Template">
                                    <Setter.Value>
                                      <ControlTemplate TargetType="RepeatButton">
                                        <Border Background="#00FFFFFF" x:Uid="Border_43" />
                                      </ControlTemplate>
                                    </Setter.Value>
                                  </Setter>
                                </Style>
                              </RepeatButton.Style>
                            </RepeatButton>
                          </Track.DecreaseRepeatButton>
                          <Track.Thumb>
                            <Thumb Background="{TemplateBinding Panel.Background}" x:Uid="Thumb_5">
                              <Thumb.Style>
                                <Style TargetType="Thumb">
                                  <Style.Resources>
                                    <ResourceDictionary />
                                  </Style.Resources>
                                  <Setter Property="Panel.Background">
                                    <Setter.Value>
                                      <Binding Path="Background" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="UIElement.Focusable">
                                    <Setter.Value>
                                      <s:Boolean>False</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                    <Setter.Value>
                                      <s:Boolean>True</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="FrameworkElement.Cursor">
                                    <Setter.Value>
                                      <Cursor>Hand</Cursor>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Control.Padding">
                                    <Setter.Value>
                                      <Thickness>6,6,6,6</Thickness>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Control.Template">
                                    <Setter.Value>
                                      <ControlTemplate TargetType="Thumb">
                                        <Border Padding="0,0,0,0" Background="#00FFFFFF" Margin="-2,-2,-2,-2" x:Uid="Border_44">
                                          <Viewbox Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" x:Uid="Viewbox_4">
                                            <Viewbox.LayoutTransform>
                                              <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </Viewbox.LayoutTransform>
                                            <Canvas Width="13" Height="17" x:Uid="Canvas_6">
                                              <Path Fill="{x:Null}" x:Uid="Path_13">
                                                <Path.Data>
                                                  <PathGeometry FillRule="Nonzero" Figures="M1,0L10,0L11,1L11,13L6.5,17L4.5,17L0,13L0,1L1,0z" />
                                                </Path.Data>
                                              </Path>
                                              <Path Stroke="{TemplateBinding Panel.Background}" StrokeThickness="0.75" StrokeEndLineCap="Round" StrokeDashCap="Round" StrokeLineJoin="Round" StrokeMiterLimit="1" x:Uid="Path_14">
                                                <Path.Data>
                                                  <PathGeometry FillRule="Nonzero" Figures="M1,0L10,0L11,1L11,13L6.5,17L4.5,17L0,13L0,1L1,0z" />
                                                </Path.Data>
                                                <Path.Fill>
                                                  <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <LinearGradientBrush.GradientStops>
                                                      <GradientStop Color="#CC999999" Offset="0.5" />
                                                      <GradientStop Color="#CCFFFFFF" Offset="0.8" />
                                                      <GradientStop Color="#CCFFFFFF" Offset="0.2" />
                                                    </LinearGradientBrush.GradientStops>
                                                    <LinearGradientBrush.RelativeTransform>
                                                      <TransformGroup>
                                                        <TransformGroup.Children>
                                                          <TranslateTransform X="-0.5" Y="-0.5" />
                                                          <ScaleTransform ScaleX="1" ScaleY="1" />
                                                          <SkewTransform AngleX="0" AngleY="0" />
                                                          <RotateTransform Angle="110" />
                                                          <TranslateTransform X="0.5" Y="0.5" />
                                                        </TransformGroup.Children>
                                                      </TransformGroup>
                                                    </LinearGradientBrush.RelativeTransform>
                                                  </LinearGradientBrush>
                                                </Path.Fill>
                                              </Path>
                                            </Canvas>
                                          </Viewbox>
                                        </Border>
                                      </ControlTemplate>
                                    </Setter.Value>
                                  </Setter>
                                </Style>
                              </Thumb.Style>
                            </Thumb>
                          </Track.Thumb>
                          <Track.IncreaseRepeatButton>
                            <RepeatButton x:Uid="RepeatButton_2">
                              <RepeatButton.Command>
                                <RoutedCommand />
                              </RepeatButton.Command>
                              <RepeatButton.Style>
                                <Style TargetType="RepeatButton">
                                  <Style.Resources>
                                    <ResourceDictionary />
                                  </Style.Resources>
                                  <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                    <Setter.Value>
                                      <s:Boolean>True</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="KeyboardNavigation.IsTabStop">
                                    <Setter.Value>
                                      <s:Boolean>False</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="UIElement.Focusable">
                                    <Setter.Value>
                                      <s:Boolean>False</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Control.Template">
                                    <Setter.Value>
                                      <ControlTemplate TargetType="RepeatButton">
                                        <Border Background="#00FFFFFF" x:Uid="Border_43" />
                                      </ControlTemplate>
                                    </Setter.Value>
                                  </Setter>
                                </Style>
                              </RepeatButton.Style>
                            </RepeatButton>
                          </Track.IncreaseRepeatButton>
                        </Track>
                        <TickBar Fill="{TemplateBinding TextElement.Foreground}" Placement="Bottom" Name="BottomTick" Height="4" x:Uid="TickBar_2" Visibility="Collapsed" Grid.Row="2" />
                      </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="Slider.TickPlacement">
                        <Setter Property="UIElement.Visibility" TargetName="TopTick">
                          <Setter.Value>
                            <x:Static Member="Visibility.Visible" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <x:Static Member="TickPlacement.TopLeft" />
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="Slider.TickPlacement">
                        <Setter Property="UIElement.Visibility" TargetName="BottomTick">
                          <Setter.Value>
                            <x:Static Member="Visibility.Visible" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <x:Static Member="TickPlacement.BottomRight" />
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="Slider.TickPlacement">
                        <Setter Property="UIElement.Visibility" TargetName="TopTick">
                          <Setter.Value>
                            <x:Static Member="Visibility.Visible" />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="UIElement.Visibility" TargetName="BottomTick">
                          <Setter.Value>
                            <x:Static Member="Visibility.Visible" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <x:Static Member="TickPlacement.Both" />
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="Slider.IsSelectionRangeEnabled">
                        <Setter Property="UIElement.Visibility" TargetName="PART_SelectionRange">
                          <Setter.Value>
                            <x:Static Member="Visibility.Visible" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="UIElement.IsMouseOver">
                        <Setter Property="UIElement.RenderTransform">
                          <Setter.Value>
                            <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="UIElement.IsMouseOver">
                        <Setter Property="UIElement.Opacity">
                          <Setter.Value>
                            <s:Double>1</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="UIElement.RenderTransform">
                          <Setter.Value>
                            <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="UIElement.IsEnabled">
                        <Setter Property="UIElement.Opacity">
                          <Setter.Value>
                            <s:Double>0.3</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>False</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </Slider.Style>
        </Slider>
        <RepeatButton Command="IncreaseZoom" BorderBrush="{TemplateBinding Border.BorderBrush}" Foreground="{TemplateBinding TextElement.Foreground}" Width="{TemplateBinding TextElement.FontSize}" Height="{TemplateBinding TextElement.FontSize}" ToolTip="增大缩放比例" x:Uid="RepeatButton_6" IsEnabled="{TemplateBinding FlowDocumentPageViewer.CanIncreaseZoom}" Focusable="False" Grid.Column="2">
          <RepeatButton.Style>
            <Style TargetType="RepeatButton">
              <Style.BasedOn>
                <Style TargetType="RepeatButton">
                  <Style.BasedOn>
                    <Style TargetType="ButtonBase">
                      <Style.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                          <Setter Property="UIElement.Opacity">
                            <Setter.Value>
                              <s:Double>0.3</s:Double>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>False</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver">
                          <Setter Property="UIElement.Opacity">
                            <Setter.Value>
                              <s:Double>1</s:Double>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                      </Style.Triggers>
                      <Style.Resources>
                        <ResourceDictionary />
                      </Style.Resources>
                      <Setter Property="UIElement.Focusable">
                        <Setter.Value>
                          <s:Boolean>False</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>0.5</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Cursor">
                        <Setter.Value>
                          <Cursor>Hand</Cursor>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Padding">
                        <Setter.Value>
                          <Thickness>3,1,3,1</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush">
                        <Setter.Value>
                          <x:Null />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderThickness">
                        <Setter.Value>
                          <Thickness>0,0,0,0</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.MinWidth">
                        <Setter.Value>
                          <s:Double>0</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.MinHeight">
                        <Setter.Value>
                          <s:Double>0</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="ButtonBase">
                            <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                              <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                            </Border>
                            <ControlTemplate.Triggers>
                              <Trigger Property="UIElement.IsMouseOver">
                                <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                  <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                              <Trigger Property="ButtonBase.IsPressed">
                                <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                  <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </Style.BasedOn>
                  <Style.Resources>
                    <ResourceDictionary />
                  </Style.Resources>
                  <Setter Property="Control.Padding">
                    <Setter.Value>
                      <Thickness>5,5,5,5</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="RepeatButton.Delay">
                    <Setter.Value>
                      <s:Int32>1000</s:Int32>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="RepeatButton.Interval">
                    <Setter.Value>
                      <s:Int32>250</s:Int32>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Style.BasedOn>
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="Control.Padding">
                <Setter.Value>
                  <Thickness>0,2,2,2</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="RepeatButton">
                    <Border Padding="0,0,0,0" Background="#00FFFFFF" x:Uid="Border_42">
                      <Viewbox Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="Viewbox_3">
                        <Canvas Width="32" Height="32" x:Uid="Canvas_5">
                          <Path Fill="{x:Null}" Width="32" Height="32" x:Uid="Path_10">
                            <Path.Data>
                              <GeometryGroup>
                                <GeometryGroup.Children>
                                  <EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
                                </GeometryGroup.Children>
                              </GeometryGroup>
                            </Path.Data>
                          </Path>
                          <Path Name="Sheen" Width="32" Height="32" x:Uid="Path_11">
                            <Path.Data>
                              <GeometryGroup>
                                <GeometryGroup.Children>
                                  <EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
                                </GeometryGroup.Children>
                              </GeometryGroup>
                            </Path.Data>
                            <Path.Fill>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#99FFFFFF" Offset="0" />
                                  <GradientStop Color="#66000000" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Path.Fill>
                          </Path>
                          <Path Stroke="{x:Null}" StrokeThickness="5" x:Uid="Path_12" Canvas.Left="16" Canvas.Top="16">
                            <Path.Data>
                              <GeometryGroup>
                                <GeometryGroup.Children>
                                  <LineGeometry StartPoint="-10,0" EndPoint="10,0" />
                                  <LineGeometry StartPoint="0,-10" EndPoint="0,10" />
                                </GeometryGroup.Children>
                              </GeometryGroup>
                            </Path.Data>
                          </Path>
                        </Canvas>
                      </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="UIElement.IsMouseOver">
                        <Setter Property="UIElement.RenderTransform" TargetName="Content">
                          <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="ButtonBase.IsPressed">
                        <Setter Property="UIElement.RenderTransform" TargetName="Content">
                          <Setter.Value>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Shape.Fill" TargetName="Sheen">
                          <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                              <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#99000000" Offset="0" />
                                <GradientStop Color="#66FFFFFF" Offset="1" />
                              </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </RepeatButton.Style>
          <RepeatButton.LayoutTransform>
            <ScaleTransform ScaleX="2.2" ScaleY="2.2" />
          </RepeatButton.LayoutTransform>
        </RepeatButton>
      </Grid>
    </Grid>
    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" x:Uid="Border_47">
      <AdornerDecorator x:Uid="AdornerDecorator_1" ClipToBounds="True">
        <DocumentPageView DocumentPaginator="{x:Null}" PageNumber="0" x:Uid="DocumentPageView_1" KeyboardNavigation.TabIndex="1" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="Local" DocumentViewerBase.IsMasterPage="True" />
      </AdornerDecorator>
    </Border>
  </DockPanel>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
          (7) FlowDocumentReader
      <?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="FlowDocumentReader" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
  <DockPanel LastChildFill="True" xml:lang="zh-cn" x:Uid="DockPanel_3">
    <Grid Background="{TemplateBinding Panel.Background}" HorizontalAlignment="Stretch" x:Uid="Grid_31" DockPanel.Dock="Bottom">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <StackPanel Orientation="Horizontal" x:Uid="StackPanel_5" Grid.Column="0">
        <ToggleButton Command="Find" Name="FindButton" Margin="3,0,3,0" ToolTip="查找" x:Uid="ToggleButton_1" Focusable="False">
          <ToggleButton.Style>
            <Style TargetType="ToggleButton">
              <Style.BasedOn>
                <Style TargetType="ButtonBase">
                  <Style.Triggers>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>0.3</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>1</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </Style.Triggers>
                  <Style.Resources>
                    <ResourceDictionary />
                  </Style.Resources>
                  <Setter Property="UIElement.Focusable">
                    <Setter.Value>
                      <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="UIElement.Opacity">
                    <Setter.Value>
                      <s:Double>0.5</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.Cursor">
                    <Setter.Value>
                      <Cursor>Hand</Cursor>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Panel.Background">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Padding">
                    <Setter.Value>
                      <Thickness>3,1,3,1</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush">
                    <Setter.Value>
                      <x:Null />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderThickness">
                    <Setter.Value>
                      <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.MinWidth">
                    <Setter.Value>
                      <s:Double>0</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.MinHeight">
                    <Setter.Value>
                      <s:Double>0</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="ButtonBase">
                        <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                          <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="UIElement.RenderTransform" TargetName="Content">
                              <Setter.Value>
                                <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="ButtonBase.IsPressed">
                            <Setter Property="UIElement.RenderTransform" TargetName="Content">
                              <Setter.Value>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Style.BasedOn>
              <Style.Triggers>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="UIElement.Visibility">
                    <Setter.Value>
                      <x:Static Member="Visibility.Collapsed" />
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked">
                  <Setter Property="UIElement.Opacity">
                    <Setter.Value>
                      <s:Double>1</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </Style.Triggers>
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
            </Style>
          </ToggleButton.Style>
          <Path Stroke="{TemplateBinding TextElement.Foreground}" VerticalAlignment="Center" x:Uid="Path_23">
            <Path.Data>
              <GeometryGroup>
                <GeometryGroup.Children>
                  <RectangleGeometry RadiusX="1" RadiusY="1" Rect="0.5,0.5,19,19" />
                  <EllipseGeometry RadiusX="5" RadiusY="5" Center="12,8" />
                  <EllipseGeometry RadiusX="4" RadiusY="4" Center="12,8" />
                  <LineGeometry StartPoint="2.5,16.5" EndPoint="9,10" />
                  <LineGeometry StartPoint="3,17" EndPoint="9.5,10.5" />
                  <LineGeometry StartPoint="3.5,17.5" EndPoint="10,11" />
                </GeometryGroup.Children>
              </GeometryGroup>
            </Path.Data>
          </Path>
        </ToggleButton>
        <Border Name="PART_FindToolBarHost" HorizontalAlignment="Left" VerticalAlignment="Center" x:Uid="Border_64" Visibility="Collapsed" />
      </StackPanel>
      <StackPanel Orientation="Horizontal" Name="PageCountAndButtons" HorizontalAlignment="Center" VerticalAlignment="Center" x:Uid="StackPanel_3" Grid.Column="1">
        <RepeatButton Command="PreviousPage" ToolTip="上一页" x:Uid="RepeatButton_9" IsEnabled="{TemplateBinding FlowDocumentReader.CanGoToPreviousPage}">
          <RepeatButton.Style>
            <Style TargetType="RepeatButton">
              <Style.BasedOn>
                <Style TargetType="ButtonBase">
                  <Style.Triggers>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>0.3</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>1</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </Style.Triggers>
                  <Style.Resources>
                    <ResourceDictionary />
                  </Style.Resources>
                  <Setter Property="UIElement.Focusable">
                    <Setter.Value>
                      <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="UIElement.Opacity">
                    <Setter.Value>
                      <s:Double>0.5</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.Cursor">
                    <Setter.Value>
                      <Cursor>Hand</Cursor>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Panel.Background">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Padding">
                    <Setter.Value>
                      <Thickness>3,1,3,1</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush">
                    <Setter.Value>
                      <x:Null />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderThickness">
                    <Setter.Value>
                      <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.MinWidth">
                    <Setter.Value>
                      <s:Double>0</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.MinHeight">
                    <Setter.Value>
                      <s:Double>0</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="ButtonBase">
                        <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                          <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="UIElement.RenderTransform" TargetName="Content">
                              <Setter.Value>
                                <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="ButtonBase.IsPressed">
                            <Setter Property="UIElement.RenderTransform" TargetName="Content">
                              <Setter.Value>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Style.BasedOn>
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="Control.Padding">
                <Setter.Value>
                  <Thickness>5,5,5,5</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="RepeatButton.Delay">
                <Setter.Value>
                  <s:Int32>1000</s:Int32>
                </Setter.Value>
              </Setter>
              <Setter Property="RepeatButton.Interval">
                <Setter.Value>
                  <s:Int32>250</s:Int32>
                </Setter.Value>
              </Setter>
            </Style>
          </RepeatButton.Style>
          <Viewbox Height="{TemplateBinding TextElement.FontSize}" x:Uid="Viewbox_7">
            <Path Fill="{TemplateBinding TextElement.Foreground}" x:Uid="Path_18">
              <Path.Data>
                <PathGeometry Figures="M5,0L5,10L0,5z" />
              </Path.Data>
            </Path>
          </Viewbox>
        </RepeatButton>
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" x:Uid="TextBlock_8">
          <Run xml:space="preserve"> </Run>第 <TextBlock Text="" x:Uid="TextBlock_9" /> <Run>/</Run> <TextBlock Text="" x:Uid="TextBlock_10" /> 页<Run xml:space="preserve"> </Run></TextBlock>
        <RepeatButton Command="NextPage" ToolTip="下一页" x:Uid="RepeatButton_10" IsEnabled="{TemplateBinding FlowDocumentReader.CanGoToNextPage}">
          <RepeatButton.Style>
            <Style TargetType="RepeatButton">
              <Style.BasedOn>
                <Style TargetType="ButtonBase">
                  <Style.Triggers>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>0.3</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>1</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </Style.Triggers>
                  <Style.Resources>
                    <ResourceDictionary />
                  </Style.Resources>
                  <Setter Property="UIElement.Focusable">
                    <Setter.Value>
                      <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="UIElement.Opacity">
                    <Setter.Value>
                      <s:Double>0.5</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.Cursor">
                    <Setter.Value>
                      <Cursor>Hand</Cursor>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Panel.Background">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Padding">
                    <Setter.Value>
                      <Thickness>3,1,3,1</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush">
                    <Setter.Value>
                      <x:Null />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderThickness">
                    <Setter.Value>
                      <Thickness>0,0,0,0</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.MinWidth">
                    <Setter.Value>
                      <s:Double>0</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.MinHeight">
                    <Setter.Value>
                      <s:Double>0</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="ButtonBase">
                        <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                          <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="UIElement.RenderTransform" TargetName="Content">
                              <Setter.Value>
                                <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="ButtonBase.IsPressed">
                            <Setter Property="UIElement.RenderTransform" TargetName="Content">
                              <Setter.Value>
                                <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Style.BasedOn>
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="Control.Padding">
                <Setter.Value>
                  <Thickness>5,5,5,5</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="RepeatButton.Delay">
                <Setter.Value>
                  <s:Int32>1000</s:Int32>
                </Setter.Value>
              </Setter>
              <Setter Property="RepeatButton.Interval">
                <Setter.Value>
                  <s:Int32>250</s:Int32>
                </Setter.Value>
              </Setter>
            </Style>
          </RepeatButton.Style>
          <Viewbox Height="{TemplateBinding TextElement.FontSize}" x:Uid="Viewbox_8">
            <Path Fill="{TemplateBinding TextElement.Foreground}" x:Uid="Path_19">
              <Path.Data>
                <PathGeometry Figures="M0,0L0,10L5,5z" />
              </Path.Data>
            </Path>
          </Viewbox>
        </RepeatButton>
      </StackPanel>
      <Grid HorizontalAlignment="Right" VerticalAlignment="Center" x:Uid="Grid_32" Grid.Column="2">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal" x:Uid="StackPanel_4">
          <RadioButton GroupName="ViewingMode" Command="FlowDocumentReader.SwitchViewingModeCommand" CommandParameter="Page" Name="PageViewButton" ToolTip="页面模式" x:Uid="RadioButton_1" IsEnabled="{TemplateBinding FlowDocumentReader.IsPageViewEnabled}">
            <RadioButton.Style>
              <Style TargetType="RadioButton">
                <Style.BasedOn>
                  <Style TargetType="ToggleButton">
                    <Style.BasedOn>
                      <Style TargetType="ButtonBase">
                        <Style.Triggers>
                          <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="UIElement.Opacity">
                              <Setter.Value>
                                <s:Double>0.3</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="UIElement.Opacity">
                              <Setter.Value>
                                <s:Double>1</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </Style.Triggers>
                        <Style.Resources>
                          <ResourceDictionary />
                        </Style.Resources>
                        <Setter Property="UIElement.Focusable">
                          <Setter.Value>
                            <s:Boolean>False</s:Boolean>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="UIElement.Opacity">
                          <Setter.Value>
                            <s:Double>0.5</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.Cursor">
                          <Setter.Value>
                            <Cursor>Hand</Cursor>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Panel.Background">
                          <Setter.Value>
                            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Padding">
                          <Setter.Value>
                            <Thickness>3,1,3,1</Thickness>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderBrush">
                          <Setter.Value>
                            <x:Null />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderThickness">
                          <Setter.Value>
                            <Thickness>0,0,0,0</Thickness>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.MinWidth">
                          <Setter.Value>
                            <s:Double>0</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.MinHeight">
                          <Setter.Value>
                            <s:Double>0</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="ButtonBase">
                              <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsMouseOver">
                                  <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                    <Setter.Value>
                                      <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                    </Setter.Value>
                                  </Setter>
                                  <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                  </Trigger.Value>
                                </Trigger>
                                <Trigger Property="ButtonBase.IsPressed">
                                  <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                    <Setter.Value>
                                      <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                    </Setter.Value>
                                  </Setter>
                                  <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                  </Trigger.Value>
                                </Trigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                      <Trigger Property="UIElement.IsEnabled">
                        <Setter Property="UIElement.Visibility">
                          <Setter.Value>
                            <x:Static Member="Visibility.Collapsed" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>False</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="ToggleButton.IsChecked">
                        <Setter Property="UIElement.Opacity">
                          <Setter.Value>
                            <s:Double>1</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                    </Style.Triggers>
                    <Style.Resources>
                      <ResourceDictionary />
                    </Style.Resources>
                  </Style>
                </Style.BasedOn>
                <Style.Resources>
                  <ResourceDictionary />
                </Style.Resources>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                      <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" x:Uid="Border_40">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_3" />
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.IsPressed">
                          <Setter Property="UIElement.RenderTransform" TargetName="Content">
                            <Setter.Value>
                              <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </RadioButton.Style>
            <Path Stroke="{TemplateBinding TextElement.Foreground}" VerticalAlignment="Center" x:Uid="Path_20">
              <Path.Data>
                <GeometryGroup>
                  <GeometryGroup.Children>
                    <RectangleGeometry RadiusX="1" RadiusY="1" Rect="0.5,0.5,19,19" />
                    <RectangleGeometry Rect="4.5,3.5,11,13" />
                    <LineGeometry StartPoint="4.5,4.5" EndPoint="15.5,4.5" />
                    <LineGeometry StartPoint="4.5,6.5" EndPoint="15.5,6.5" />
                    <LineGeometry StartPoint="4.5,8.5" EndPoint="15.5,8.5" />
                    <LineGeometry StartPoint="4.5,10.5" EndPoint="15.5,10.5" />
                    <LineGeometry StartPoint="4.5,12.5" EndPoint="15.5,12.5" />
                    <LineGeometry StartPoint="4.5,14.5" EndPoint="15.5,14.5" />
                  </GeometryGroup.Children>
                </GeometryGroup>
              </Path.Data>
            </Path>
          </RadioButton>
          <RadioButton GroupName="ViewingMode" Command="FlowDocumentReader.SwitchViewingModeCommand" CommandParameter="TwoPage" Name="TwoPageViewButton" ToolTip="双页模式" x:Uid="RadioButton_2" IsEnabled="{TemplateBinding FlowDocumentReader.IsTwoPageViewEnabled}">
            <RadioButton.Style>
              <Style TargetType="RadioButton">
                <Style.BasedOn>
                  <Style TargetType="ToggleButton">
                    <Style.BasedOn>
                      <Style TargetType="ButtonBase">
                        <Style.Triggers>
                          <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="UIElement.Opacity">
                              <Setter.Value>
                                <s:Double>0.3</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="UIElement.Opacity">
                              <Setter.Value>
                                <s:Double>1</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </Style.Triggers>
                        <Style.Resources>
                          <ResourceDictionary />
                        </Style.Resources>
                        <Setter Property="UIElement.Focusable">
                          <Setter.Value>
                            <s:Boolean>False</s:Boolean>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="UIElement.Opacity">
                          <Setter.Value>
                            <s:Double>0.5</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.Cursor">
                          <Setter.Value>
                            <Cursor>Hand</Cursor>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Panel.Background">
                          <Setter.Value>
                            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Padding">
                          <Setter.Value>
                            <Thickness>3,1,3,1</Thickness>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderBrush">
                          <Setter.Value>
                            <x:Null />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderThickness">
                          <Setter.Value>
                            <Thickness>0,0,0,0</Thickness>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.MinWidth">
                          <Setter.Value>
                            <s:Double>0</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.MinHeight">
                          <Setter.Value>
                            <s:Double>0</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="ButtonBase">
                              <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsMouseOver">
                                  <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                    <Setter.Value>
                                      <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                    </Setter.Value>
                                  </Setter>
                                  <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                  </Trigger.Value>
                                </Trigger>
                                <Trigger Property="ButtonBase.IsPressed">
                                  <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                    <Setter.Value>
                                      <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                    </Setter.Value>
                                  </Setter>
                                  <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                  </Trigger.Value>
                                </Trigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                      <Trigger Property="UIElement.IsEnabled">
                        <Setter Property="UIElement.Visibility">
                          <Setter.Value>
                            <x:Static Member="Visibility.Collapsed" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>False</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="ToggleButton.IsChecked">
                        <Setter Property="UIElement.Opacity">
                          <Setter.Value>
                            <s:Double>1</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                    </Style.Triggers>
                    <Style.Resources>
                      <ResourceDictionary />
                    </Style.Resources>
                  </Style>
                </Style.BasedOn>
                <Style.Resources>
                  <ResourceDictionary />
                </Style.Resources>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                      <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" x:Uid="Border_40">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_3" />
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.IsPressed">
                          <Setter Property="UIElement.RenderTransform" TargetName="Content">
                            <Setter.Value>
                              <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </RadioButton.Style>
            <Path Stroke="{TemplateBinding TextElement.Foreground}" VerticalAlignment="Center" x:Uid="Path_21">
              <Path.Data>
                <GeometryGroup>
                  <GeometryGroup.Children>
                    <RectangleGeometry RadiusX="1" RadiusY="1" Rect="0.5,0.5,19,19" />
                    <RectangleGeometry Rect="3.5,3.5,5,13" />
                    <LineGeometry StartPoint="3.5,4.5" EndPoint="8.5,4.5" />
                    <LineGeometry StartPoint="3.5,6.5" EndPoint="8.5,6.5" />
                    <LineGeometry StartPoint="3.5,8.5" EndPoint="8.5,8.5" />
                    <LineGeometry StartPoint="3.5,10.5" EndPoint="8.5,10.5" />
                    <LineGeometry StartPoint="3.5,12.5" EndPoint="8.5,12.5" />
                    <LineGeometry StartPoint="3.5,14.5" EndPoint="8.5,14.5" />
                    <RectangleGeometry Rect="11.5,3.5,5,13" />
                    <LineGeometry StartPoint="11.5,4.5" EndPoint="16.5,4.5" />
                    <LineGeometry StartPoint="11.5,6.5" EndPoint="16.5,6.5" />
                    <LineGeometry StartPoint="11.5,8.5" EndPoint="16.5,8.5" />
                    <LineGeometry StartPoint="11.5,10.5" EndPoint="16.5,10.5" />
                    <LineGeometry StartPoint="11.5,12.5" EndPoint="16.5,12.5" />
                    <LineGeometry StartPoint="11.5,14.5" EndPoint="16.5,14.5" />
                  </GeometryGroup.Children>
                </GeometryGroup>
              </Path.Data>
            </Path>
          </RadioButton>
          <RadioButton GroupName="ViewingMode" Command="FlowDocumentReader.SwitchViewingModeCommand" CommandParameter="Scroll" Name="ScrollViewButton" ToolTip="滚动模式" x:Uid="RadioButton_3" IsEnabled="{TemplateBinding FlowDocumentReader.IsScrollViewEnabled}">
            <RadioButton.Style>
              <Style TargetType="RadioButton">
                <Style.BasedOn>
                  <Style TargetType="ToggleButton">
                    <Style.BasedOn>
                      <Style TargetType="ButtonBase">
                        <Style.Triggers>
                          <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="UIElement.Opacity">
                              <Setter.Value>
                                <s:Double>0.3</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="UIElement.Opacity">
                              <Setter.Value>
                                <s:Double>1</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </Style.Triggers>
                        <Style.Resources>
                          <ResourceDictionary />
                        </Style.Resources>
                        <Setter Property="UIElement.Focusable">
                          <Setter.Value>
                            <s:Boolean>False</s:Boolean>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="UIElement.Opacity">
                          <Setter.Value>
                            <s:Double>0.5</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.Cursor">
                          <Setter.Value>
                            <Cursor>Hand</Cursor>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Panel.Background">
                          <Setter.Value>
                            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Padding">
                          <Setter.Value>
                            <Thickness>3,1,3,1</Thickness>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderBrush">
                          <Setter.Value>
                            <x:Null />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderThickness">
                          <Setter.Value>
                            <Thickness>0,0,0,0</Thickness>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.MinWidth">
                          <Setter.Value>
                            <s:Double>0</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.MinHeight">
                          <Setter.Value>
                            <s:Double>0</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="ButtonBase">
                              <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsMouseOver">
                                  <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                    <Setter.Value>
                                      <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                    </Setter.Value>
                                  </Setter>
                                  <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                  </Trigger.Value>
                                </Trigger>
                                <Trigger Property="ButtonBase.IsPressed">
                                  <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                    <Setter.Value>
                                      <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                    </Setter.Value>
                                  </Setter>
                                  <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                  </Trigger.Value>
                                </Trigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                      <Trigger Property="UIElement.IsEnabled">
                        <Setter Property="UIElement.Visibility">
                          <Setter.Value>
                            <x:Static Member="Visibility.Collapsed" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>False</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="ToggleButton.IsChecked">
                        <Setter Property="UIElement.Opacity">
                          <Setter.Value>
                            <s:Double>1</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                    </Style.Triggers>
                    <Style.Resources>
                      <ResourceDictionary />
                    </Style.Resources>
                  </Style>
                </Style.BasedOn>
                <Style.Resources>
                  <ResourceDictionary />
                </Style.Resources>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                      <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" x:Uid="Border_40">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_3" />
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.IsPressed">
                          <Setter Property="UIElement.RenderTransform" TargetName="Content">
                            <Setter.Value>
                              <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </RadioButton.Style>
            <Path Stroke="{TemplateBinding TextElement.Foreground}" VerticalAlignment="Center" x:Uid="Path_22">
              <Path.Data>
                <GeometryGroup>
                  <GeometryGroup.Children>
                    <RectangleGeometry RadiusX="1" RadiusY="1" Rect="0.5,0.5,19,19" />
                    <RectangleGeometry Rect="3.5,3.5,8,13" />
                    <LineGeometry StartPoint="3.5,4.5" EndPoint="11.5,4.5" />
                    <LineGeometry StartPoint="3.5,6.5" EndPoint="11.5,6.5" />
                    <LineGeometry StartPoint="3.5,8.5" EndPoint="11.5,8.5" />
                    <LineGeometry StartPoint="3.5,10.5" EndPoint="11.5,10.5" />
                    <LineGeometry StartPoint="3.5,12.5" EndPoint="11.5,12.5" />
                    <LineGeometry StartPoint="3.5,14.5" EndPoint="11.5,14.5" />
                    <RectangleGeometry Rect="13.5,3.5,3,13" />
                    <RectangleGeometry Rect="14.5,4.5,1,3" />
                    <RectangleGeometry Rect="14.5,12.5,1,3" />
                  </GeometryGroup.Children>
                </GeometryGroup>
              </Path.Data>
            </Path>
          </RadioButton>
        </StackPanel>
        <RepeatButton Command="DecreaseZoom" BorderBrush="{TemplateBinding Border.BorderBrush}" Foreground="{TemplateBinding TextElement.Foreground}" Width="{TemplateBinding TextElement.FontSize}" Height="{TemplateBinding TextElement.FontSize}" ToolTip="减小缩放比例" x:Uid="RepeatButton_11" IsEnabled="{TemplateBinding FlowDocumentReader.CanDecreaseZoom}" Grid.Column="1">
          <RepeatButton.Style>
            <Style TargetType="RepeatButton">
              <Style.BasedOn>
                <Style TargetType="RepeatButton">
                  <Style.BasedOn>
                    <Style TargetType="ButtonBase">
                      <Style.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                          <Setter Property="UIElement.Opacity">
                            <Setter.Value>
                              <s:Double>0.3</s:Double>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>False</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver">
                          <Setter Property="UIElement.Opacity">
                            <Setter.Value>
                              <s:Double>1</s:Double>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                      </Style.Triggers>
                      <Style.Resources>
                        <ResourceDictionary />
                      </Style.Resources>
                      <Setter Property="UIElement.Focusable">
                        <Setter.Value>
                          <s:Boolean>False</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>0.5</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Cursor">
                        <Setter.Value>
                          <Cursor>Hand</Cursor>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Padding">
                        <Setter.Value>
                          <Thickness>3,1,3,1</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush">
                        <Setter.Value>
                          <x:Null />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderThickness">
                        <Setter.Value>
                          <Thickness>0,0,0,0</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.MinWidth">
                        <Setter.Value>
                          <s:Double>0</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.MinHeight">
                        <Setter.Value>
                          <s:Double>0</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="ButtonBase">
                            <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                              <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                            </Border>
                            <ControlTemplate.Triggers>
                              <Trigger Property="UIElement.IsMouseOver">
                                <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                  <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                              <Trigger Property="ButtonBase.IsPressed">
                                <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                  <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </Style.BasedOn>
                  <Style.Resources>
                    <ResourceDictionary />
                  </Style.Resources>
                  <Setter Property="Control.Padding">
                    <Setter.Value>
                      <Thickness>5,5,5,5</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="RepeatButton.Delay">
                    <Setter.Value>
                      <s:Int32>1000</s:Int32>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="RepeatButton.Interval">
                    <Setter.Value>
                      <s:Int32>250</s:Int32>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Style.BasedOn>
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="Control.Padding">
                <Setter.Value>
                  <Thickness>2,2,0,2</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="RepeatButton">
                    <Border Padding="0,0,0,0" Background="#00FFFFFF" x:Uid="Border_41">
                      <Viewbox Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="Viewbox_2">
                        <Canvas Width="32" Height="32" x:Uid="Canvas_4">
                          <Path Fill="{x:Null}" Width="32" Height="32" x:Uid="Path_7">
                            <Path.Data>
                              <GeometryGroup>
                                <GeometryGroup.Children>
                                  <EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
                                </GeometryGroup.Children>
                              </GeometryGroup>
                            </Path.Data>
                          </Path>
                          <Path Name="Sheen" Width="32" Height="32" x:Uid="Path_8">
                            <Path.Data>
                              <GeometryGroup>
                                <GeometryGroup.Children>
                                  <EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
                                </GeometryGroup.Children>
                              </GeometryGroup>
                            </Path.Data>
                            <Path.Fill>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#99FFFFFF" Offset="0" />
                                  <GradientStop Color="#66000000" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Path.Fill>
                          </Path>
                          <Path Stroke="{x:Null}" StrokeThickness="5" x:Uid="Path_9" Canvas.Left="16" Canvas.Top="16">
                            <Path.Data>
                              <LineGeometry StartPoint="-10,0" EndPoint="10,0" />
                            </Path.Data>
                          </Path>
                        </Canvas>
                      </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="UIElement.IsMouseOver">
                        <Setter Property="UIElement.RenderTransform" TargetName="Content">
                          <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="ButtonBase.IsPressed">
                        <Setter Property="UIElement.RenderTransform" TargetName="Content">
                          <Setter.Value>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Shape.Fill" TargetName="Sheen">
                          <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                              <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#99000000" Offset="0" />
                                <GradientStop Color="#66FFFFFF" Offset="1" />
                              </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </RepeatButton.Style>
          <RepeatButton.LayoutTransform>
            <ScaleTransform ScaleX="2.2" ScaleY="2.2" />
          </RepeatButton.LayoutTransform>
        </RepeatButton>
        <Slider TickFrequency="{TemplateBinding FlowDocumentPageViewer.ZoomIncrement}" Minimum="{TemplateBinding FlowDocumentPageViewer.MinZoom}" Maximum="{TemplateBinding FlowDocumentPageViewer.MaxZoom}" Value="0" LargeChange="{TemplateBinding FlowDocumentPageViewer.ZoomIncrement}" SmallChange="{TemplateBinding FlowDocumentPageViewer.ZoomIncrement}" FontSize="{TemplateBinding TextElement.FontSize}" Width="100" HorizontalAlignment="Stretch" VerticalAlignment="Center" x:Uid="Slider_3" Grid.Column="2">
          <Slider.Style>
            <Style TargetType="Slider">
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="Stylus.IsPressAndHoldEnabled">
                <Setter.Value>
                  <s:Boolean>False</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="UIElement.Focusable">
                <Setter.Value>
                  <s:Boolean>False</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.OverridesDefaultStyle">
                <Setter.Value>
                  <s:Boolean>True</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="Panel.Background">
                <Setter.Value>
                  <Binding Path="Background" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderThickness">
                <Setter.Value>
                  <Thickness>1,1,1,1</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush">
                <Setter.Value>
                  <SolidColorBrush>#00000000</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="TextElement.Foreground">
                <Setter.Value>
                  <Binding Path="Foreground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Slider.IsSnapToTickEnabled">
                <Setter.Value>
                  <s:Boolean>True</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="UIElement.RenderTransformOrigin">
                <Setter.Value>
                  <Point>0.5,0.5</Point>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.MinWidth">
                <Setter.Value>
                  <s:Double>50</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.MinHeight">
                <Setter.Value>
                  <s:Double>0</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.Width">
                <Setter.Value>
                  <s:Double>NaN</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="Control.Padding">
                <Setter.Value>
                  <Thickness>2,0,2,0</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.Height">
                <Setter.Value>
                  <s:Double>NaN</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="UIElement.Opacity">
                <Setter.Value>
                  <s:Double>0.75</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="RepeatButton.Delay">
                <Setter.Value>
                  <s:Int32>1000</s:Int32>
                </Setter.Value>
              </Setter>
              <Setter Property="RepeatButton.Interval">
                <Setter.Value>
                  <s:Int32>250</s:Int32>
                </Setter.Value>
              </Setter>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="Slider">
                    <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF" x:Uid="Border_45">
                      <Grid x:Uid="Grid_22" ClipToBounds="False">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TickBar Fill="{TemplateBinding TextElement.Foreground}" Placement="Top" Name="TopTick" Height="4" x:Uid="TickBar_1" Visibility="Collapsed" Grid.Row="0" />
                        <Border CornerRadius="2,2,2,2" Background="{TemplateBinding TextElement.Foreground}" Height="2" Opacity="0.5" x:Uid="Border_46" Grid.Row="1" />
                        <Canvas Height="4" VerticalAlignment="Center" x:Uid="Canvas_7" Grid.Row="1">
                          <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Name="PART_SelectionRange" Height="2" x:Uid="Rectangle_17" Visibility="Hidden" Canvas.Top="1" />
                        </Canvas>
                        <Track Name="PART_Track" x:Uid="PART_Track" Grid.Row="1">
                          <Track.DecreaseRepeatButton>
                            <RepeatButton x:Uid="RepeatButton_1">
                              <RepeatButton.Command>
                                <RoutedCommand />
                              </RepeatButton.Command>
                              <RepeatButton.Style>
                                <Style TargetType="RepeatButton">
                                  <Style.Resources>
                                    <ResourceDictionary />
                                  </Style.Resources>
                                  <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                    <Setter.Value>
                                      <s:Boolean>True</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="KeyboardNavigation.IsTabStop">
                                    <Setter.Value>
                                      <s:Boolean>False</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="UIElement.Focusable">
                                    <Setter.Value>
                                      <s:Boolean>False</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Control.Template">
                                    <Setter.Value>
                                      <ControlTemplate TargetType="RepeatButton">
                                        <Border Background="#00FFFFFF" x:Uid="Border_43" />
                                      </ControlTemplate>
                                    </Setter.Value>
                                  </Setter>
                                </Style>
                              </RepeatButton.Style>
                            </RepeatButton>
                          </Track.DecreaseRepeatButton>
                          <Track.Thumb>
                            <Thumb Background="{TemplateBinding Panel.Background}" x:Uid="Thumb_5">
                              <Thumb.Style>
                                <Style TargetType="Thumb">
                                  <Style.Resources>
                                    <ResourceDictionary />
                                  </Style.Resources>
                                  <Setter Property="Panel.Background">
                                    <Setter.Value>
                                      <Binding Path="Background" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="UIElement.Focusable">
                                    <Setter.Value>
                                      <s:Boolean>False</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                    <Setter.Value>
                                      <s:Boolean>True</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="FrameworkElement.Cursor">
                                    <Setter.Value>
                                      <Cursor>Hand</Cursor>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Control.Padding">
                                    <Setter.Value>
                                      <Thickness>6,6,6,6</Thickness>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Control.Template">
                                    <Setter.Value>
                                      <ControlTemplate TargetType="Thumb">
                                        <Border Padding="0,0,0,0" Background="#00FFFFFF" Margin="-2,-2,-2,-2" x:Uid="Border_44">
                                          <Viewbox Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" x:Uid="Viewbox_4">
                                            <Viewbox.LayoutTransform>
                                              <ScaleTransform ScaleX="1" ScaleY="1" />
                                            </Viewbox.LayoutTransform>
                                            <Canvas Width="13" Height="17" x:Uid="Canvas_6">
                                              <Path Fill="{x:Null}" x:Uid="Path_13">
                                                <Path.Data>
                                                  <PathGeometry FillRule="Nonzero" Figures="M1,0L10,0L11,1L11,13L6.5,17L4.5,17L0,13L0,1L1,0z" />
                                                </Path.Data>
                                              </Path>
                                              <Path Stroke="{TemplateBinding Panel.Background}" StrokeThickness="0.75" StrokeEndLineCap="Round" StrokeDashCap="Round" StrokeLineJoin="Round" StrokeMiterLimit="1" x:Uid="Path_14">
                                                <Path.Data>
                                                  <PathGeometry FillRule="Nonzero" Figures="M1,0L10,0L11,1L11,13L6.5,17L4.5,17L0,13L0,1L1,0z" />
                                                </Path.Data>
                                                <Path.Fill>
                                                  <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <LinearGradientBrush.GradientStops>
                                                      <GradientStop Color="#CC999999" Offset="0.5" />
                                                      <GradientStop Color="#CCFFFFFF" Offset="0.8" />
                                                      <GradientStop Color="#CCFFFFFF" Offset="0.2" />
                                                    </LinearGradientBrush.GradientStops>
                                                    <LinearGradientBrush.RelativeTransform>
                                                      <TransformGroup>
                                                        <TransformGroup.Children>
                                                          <TranslateTransform X="-0.5" Y="-0.5" />
                                                          <ScaleTransform ScaleX="1" ScaleY="1" />
                                                          <SkewTransform AngleX="0" AngleY="0" />
                                                          <RotateTransform Angle="110" />
                                                          <TranslateTransform X="0.5" Y="0.5" />
                                                        </TransformGroup.Children>
                                                      </TransformGroup>
                                                    </LinearGradientBrush.RelativeTransform>
                                                  </LinearGradientBrush>
                                                </Path.Fill>
                                              </Path>
                                            </Canvas>
                                          </Viewbox>
                                        </Border>
                                      </ControlTemplate>
                                    </Setter.Value>
                                  </Setter>
                                </Style>
                              </Thumb.Style>
                            </Thumb>
                          </Track.Thumb>
                          <Track.IncreaseRepeatButton>
                            <RepeatButton x:Uid="RepeatButton_2">
                              <RepeatButton.Command>
                                <RoutedCommand />
                              </RepeatButton.Command>
                              <RepeatButton.Style>
                                <Style TargetType="RepeatButton">
                                  <Style.Resources>
                                    <ResourceDictionary />
                                  </Style.Resources>
                                  <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                    <Setter.Value>
                                      <s:Boolean>True</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="KeyboardNavigation.IsTabStop">
                                    <Setter.Value>
                                      <s:Boolean>False</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="UIElement.Focusable">
                                    <Setter.Value>
                                      <s:Boolean>False</s:Boolean>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Control.Template">
                                    <Setter.Value>
                                      <ControlTemplate TargetType="RepeatButton">
                                        <Border Background="#00FFFFFF" x:Uid="Border_43" />
                                      </ControlTemplate>
                                    </Setter.Value>
                                  </Setter>
                                </Style>
                              </RepeatButton.Style>
                            </RepeatButton>
                          </Track.IncreaseRepeatButton>
                        </Track>
                        <TickBar Fill="{TemplateBinding TextElement.Foreground}" Placement="Bottom" Name="BottomTick" Height="4" x:Uid="TickBar_2" Visibility="Collapsed" Grid.Row="2" />
                      </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="Slider.TickPlacement">
                        <Setter Property="UIElement.Visibility" TargetName="TopTick">
                          <Setter.Value>
                            <x:Static Member="Visibility.Visible" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <x:Static Member="TickPlacement.TopLeft" />
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="Slider.TickPlacement">
                        <Setter Property="UIElement.Visibility" TargetName="BottomTick">
                          <Setter.Value>
                            <x:Static Member="Visibility.Visible" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <x:Static Member="TickPlacement.BottomRight" />
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="Slider.TickPlacement">
                        <Setter Property="UIElement.Visibility" TargetName="TopTick">
                          <Setter.Value>
                            <x:Static Member="Visibility.Visible" />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="UIElement.Visibility" TargetName="BottomTick">
                          <Setter.Value>
                            <x:Static Member="Visibility.Visible" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <x:Static Member="TickPlacement.Both" />
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="Slider.IsSelectionRangeEnabled">
                        <Setter Property="UIElement.Visibility" TargetName="PART_SelectionRange">
                          <Setter.Value>
                            <x:Static Member="Visibility.Visible" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="UIElement.IsMouseOver">
                        <Setter Property="UIElement.RenderTransform">
                          <Setter.Value>
                            <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="UIElement.IsMouseOver">
                        <Setter Property="UIElement.Opacity">
                          <Setter.Value>
                            <s:Double>1</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="UIElement.RenderTransform">
                          <Setter.Value>
                            <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="UIElement.IsEnabled">
                        <Setter Property="UIElement.Opacity">
                          <Setter.Value>
                            <s:Double>0.3</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>False</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </Slider.Style>
        </Slider>
        <RepeatButton Command="IncreaseZoom" BorderBrush="{TemplateBinding Border.BorderBrush}" Foreground="{TemplateBinding TextElement.Foreground}" Width="{TemplateBinding TextElement.FontSize}" Height="{TemplateBinding TextElement.FontSize}" ToolTip="增大缩放比例" x:Uid="RepeatButton_12" IsEnabled="{TemplateBinding FlowDocumentReader.CanIncreaseZoom}" Grid.Column="3">
          <RepeatButton.Style>
            <Style TargetType="RepeatButton">
              <Style.BasedOn>
                <Style TargetType="RepeatButton">
                  <Style.BasedOn>
                    <Style TargetType="ButtonBase">
                      <Style.Triggers>
                        <Trigger Property="UIElement.IsEnabled">
                          <Setter Property="UIElement.Opacity">
                            <Setter.Value>
                              <s:Double>0.3</s:Double>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>False</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver">
                          <Setter Property="UIElement.Opacity">
                            <Setter.Value>
                              <s:Double>1</s:Double>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                      </Style.Triggers>
                      <Style.Resources>
                        <ResourceDictionary />
                      </Style.Resources>
                      <Setter Property="UIElement.Focusable">
                        <Setter.Value>
                          <s:Boolean>False</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="UIElement.Opacity">
                        <Setter.Value>
                          <s:Double>0.5</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Cursor">
                        <Setter.Value>
                          <Cursor>Hand</Cursor>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Padding">
                        <Setter.Value>
                          <Thickness>3,1,3,1</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush">
                        <Setter.Value>
                          <x:Null />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderThickness">
                        <Setter.Value>
                          <Thickness>0,0,0,0</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.MinWidth">
                        <Setter.Value>
                          <s:Double>0</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.MinHeight">
                        <Setter.Value>
                          <s:Double>0</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="ButtonBase">
                            <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                              <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                            </Border>
                            <ControlTemplate.Triggers>
                              <Trigger Property="UIElement.IsMouseOver">
                                <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                  <Setter.Value>
                                    <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                              <Trigger Property="ButtonBase.IsPressed">
                                <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                  <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </Style.BasedOn>
                  <Style.Resources>
                    <ResourceDictionary />
                  </Style.Resources>
                  <Setter Property="Control.Padding">
                    <Setter.Value>
                      <Thickness>5,5,5,5</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="RepeatButton.Delay">
                    <Setter.Value>
                      <s:Int32>1000</s:Int32>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="RepeatButton.Interval">
                    <Setter.Value>
                      <s:Int32>250</s:Int32>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Style.BasedOn>
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="Control.Padding">
                <Setter.Value>
                  <Thickness>0,2,2,2</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="RepeatButton">
                    <Border Padding="0,0,0,0" Background="#00FFFFFF" x:Uid="Border_42">
                      <Viewbox Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="Viewbox_3">
                        <Canvas Width="32" Height="32" x:Uid="Canvas_5">
                          <Path Fill="{x:Null}" Width="32" Height="32" x:Uid="Path_10">
                            <Path.Data>
                              <GeometryGroup>
                                <GeometryGroup.Children>
                                  <EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
                                </GeometryGroup.Children>
                              </GeometryGroup>
                            </Path.Data>
                          </Path>
                          <Path Name="Sheen" Width="32" Height="32" x:Uid="Path_11">
                            <Path.Data>
                              <GeometryGroup>
                                <GeometryGroup.Children>
                                  <EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
                                </GeometryGroup.Children>
                              </GeometryGroup>
                            </Path.Data>
                            <Path.Fill>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#99FFFFFF" Offset="0" />
                                  <GradientStop Color="#66000000" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Path.Fill>
                          </Path>
                          <Path Stroke="{x:Null}" StrokeThickness="5" x:Uid="Path_12" Canvas.Left="16" Canvas.Top="16">
                            <Path.Data>
                              <GeometryGroup>
                                <GeometryGroup.Children>
                                  <LineGeometry StartPoint="-10,0" EndPoint="10,0" />
                                  <LineGeometry StartPoint="0,-10" EndPoint="0,10" />
                                </GeometryGroup.Children>
                              </GeometryGroup>
                            </Path.Data>
                          </Path>
                        </Canvas>
                      </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="UIElement.IsMouseOver">
                        <Setter Property="UIElement.RenderTransform" TargetName="Content">
                          <Setter.Value>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                      <Trigger Property="ButtonBase.IsPressed">
                        <Setter Property="UIElement.RenderTransform" TargetName="Content">
                          <Setter.Value>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Shape.Fill" TargetName="Sheen">
                          <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                              <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#99000000" Offset="0" />
                                <GradientStop Color="#66FFFFFF" Offset="1" />
                              </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </RepeatButton.Style>
          <RepeatButton.LayoutTransform>
            <ScaleTransform ScaleX="2.2" ScaleY="2.2" />
          </RepeatButton.LayoutTransform>
        </RepeatButton>
      </Grid>
    </Grid>
    <Grid x:Uid="Grid_33">
      <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Name="PART_ContentHost" Margin="{TemplateBinding Control.Padding}" x:Uid="Border_59" KeyboardNavigation.TabIndex="1" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="Local" />
    </Grid>
  </DockPanel>
  <ControlTemplate.Triggers>
    <Trigger Property="FlowDocumentReader.ViewingMode">
      <Setter Property="ToggleButton.IsChecked" TargetName="PageViewButton">
        <Setter.Value>
          <s:Boolean>True</s:Boolean>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="FlowDocumentReaderViewingMode.Page" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="FlowDocumentReader.ViewingMode">
      <Setter Property="ToggleButton.IsChecked" TargetName="TwoPageViewButton">
        <Setter.Value>
          <s:Boolean>True</s:Boolean>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="FlowDocumentReaderViewingMode.TwoPage" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="FlowDocumentReader.ViewingMode">
      <Setter Property="ToggleButton.IsChecked" TargetName="ScrollViewButton">
        <Setter.Value>
          <s:Boolean>True</s:Boolean>
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="PageCountAndButtons">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="FlowDocumentReaderViewingMode.Scroll" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="FlowDocumentReader.Document">
      <Setter Property="UIElement.IsEnabled" TargetName="FindButton">
        <Setter.Value>
          <s:Boolean>False</s:Boolean>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Null />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="FlowDocumentReader.IsFindEnabled">
      <Setter Property="UIElement.IsEnabled" TargetName="FindButton">
        <Setter.Value>
          <s:Boolean>False</s:Boolean>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>     
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
          (8) FlowDocumentScrollViewer
 <?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="FlowDocumentScrollViewer" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Grid xml:lang="zh-cn" x:Uid="Grid_26">
    <Grid.RowDefinitions>
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Margin="{TemplateBinding Control.Padding}" x:Uid="Border_49">
      <ScrollViewer CanContentScroll="True" Name="PART_ContentHost" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" x:Uid="ScrollViewer_8" />
    </Border>
    <Border Background="{TemplateBinding Panel.Background}" Name="PART_ToolBarHost" x:Uid="Border_51" Grid.Row="1">
      <Grid x:Uid="Grid_34">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Border Name="PART_FindToolBarHost" HorizontalAlignment="Left" VerticalAlignment="Center" x:Uid="Border_61" Visibility="Collapsed" Grid.Column="0" />
        <Grid HorizontalAlignment="Right" VerticalAlignment="Center" x:Uid="Grid_27" Grid.Column="1">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <RepeatButton Command="DecreaseZoom" BorderBrush="{TemplateBinding Border.BorderBrush}" Foreground="{TemplateBinding TextElement.Foreground}" Width="{TemplateBinding TextElement.FontSize}" Height="{TemplateBinding TextElement.FontSize}" ToolTip="减小缩放比例" x:Uid="RepeatButton_7" IsEnabled="{TemplateBinding FlowDocumentScrollViewer.CanDecreaseZoom}" Grid.Column="0">
            <RepeatButton.Style>
              <Style TargetType="RepeatButton">
                <Style.BasedOn>
                  <Style TargetType="RepeatButton">
                    <Style.BasedOn>
                      <Style TargetType="ButtonBase">
                        <Style.Triggers>
                          <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="UIElement.Opacity">
                              <Setter.Value>
                                <s:Double>0.3</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="UIElement.Opacity">
                              <Setter.Value>
                                <s:Double>1</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </Style.Triggers>
                        <Style.Resources>
                          <ResourceDictionary />
                        </Style.Resources>
                        <Setter Property="UIElement.Focusable">
                          <Setter.Value>
                            <s:Boolean>False</s:Boolean>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="UIElement.Opacity">
                          <Setter.Value>
                            <s:Double>0.5</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.Cursor">
                          <Setter.Value>
                            <Cursor>Hand</Cursor>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Panel.Background">
                          <Setter.Value>
                            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Padding">
                          <Setter.Value>
                            <Thickness>3,1,3,1</Thickness>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderBrush">
                          <Setter.Value>
                            <x:Null />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderThickness">
                          <Setter.Value>
                            <Thickness>0,0,0,0</Thickness>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.MinWidth">
                          <Setter.Value>
                            <s:Double>0</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.MinHeight">
                          <Setter.Value>
                            <s:Double>0</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="ButtonBase">
                              <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsMouseOver">
                                  <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                    <Setter.Value>
                                      <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                    </Setter.Value>
                                  </Setter>
                                  <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                  </Trigger.Value>
                                </Trigger>
                                <Trigger Property="ButtonBase.IsPressed">
                                  <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                    <Setter.Value>
                                      <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                    </Setter.Value>
                                  </Setter>
                                  <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                  </Trigger.Value>
                                </Trigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </Style.BasedOn>
                    <Style.Resources>
                      <ResourceDictionary />
                    </Style.Resources>
                    <Setter Property="Control.Padding">
                      <Setter.Value>
                        <Thickness>5,5,5,5</Thickness>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="RepeatButton.Delay">
                      <Setter.Value>
                        <s:Int32>1000</s:Int32>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="RepeatButton.Interval">
                      <Setter.Value>
                        <s:Int32>250</s:Int32>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </Style.BasedOn>
                <Style.Resources>
                  <ResourceDictionary />
                </Style.Resources>
                <Setter Property="Control.Padding">
                  <Setter.Value>
                    <Thickness>2,2,0,2</Thickness>
                  </Setter.Value>
                </Setter>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                      <Border Padding="0,0,0,0" Background="#00FFFFFF" x:Uid="Border_41">
                        <Viewbox Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="Viewbox_2">
                          <Canvas Width="32" Height="32" x:Uid="Canvas_4">
                            <Path Fill="{x:Null}" Width="32" Height="32" x:Uid="Path_7">
                              <Path.Data>
                                <GeometryGroup>
                                  <GeometryGroup.Children>
                                    <EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
                                  </GeometryGroup.Children>
                                </GeometryGroup>
                              </Path.Data>
                            </Path>
                            <Path Name="Sheen" Width="32" Height="32" x:Uid="Path_8">
                              <Path.Data>
                                <GeometryGroup>
                                  <GeometryGroup.Children>
                                    <EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
                                  </GeometryGroup.Children>
                                </GeometryGroup>
                              </Path.Data>
                              <Path.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                  <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#99FFFFFF" Offset="0" />
                                    <GradientStop Color="#66000000" Offset="1" />
                                  </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                              </Path.Fill>
                            </Path>
                            <Path Stroke="{x:Null}" StrokeThickness="5" x:Uid="Path_9" Canvas.Left="16" Canvas.Top="16">
                              <Path.Data>
                                <LineGeometry StartPoint="-10,0" EndPoint="10,0" />
                              </Path.Data>
                            </Path>
                          </Canvas>
                        </Viewbox>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver">
                          <Setter Property="UIElement.RenderTransform" TargetName="Content">
                            <Setter.Value>
                              <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed">
                          <Setter Property="UIElement.RenderTransform" TargetName="Content">
                            <Setter.Value>
                              <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Shape.Fill" TargetName="Sheen">
                            <Setter.Value>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#99000000" Offset="0" />
                                  <GradientStop Color="#66FFFFFF" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </RepeatButton.Style>
            <RepeatButton.LayoutTransform>
              <ScaleTransform ScaleX="2.2" ScaleY="2.2" />
            </RepeatButton.LayoutTransform>
          </RepeatButton>
          <Slider TickFrequency="{TemplateBinding FlowDocumentPageViewer.ZoomIncrement}" Minimum="{TemplateBinding FlowDocumentPageViewer.MinZoom}" Maximum="{TemplateBinding FlowDocumentPageViewer.MaxZoom}" Value="0" LargeChange="{TemplateBinding FlowDocumentPageViewer.ZoomIncrement}" SmallChange="{TemplateBinding FlowDocumentPageViewer.ZoomIncrement}" FontSize="{TemplateBinding TextElement.FontSize}" Width="100" HorizontalAlignment="Stretch" VerticalAlignment="Center" x:Uid="Slider_2" Grid.Column="1">
            <Slider.Style>
              <Style TargetType="Slider">
                <Style.Resources>
                  <ResourceDictionary />
                </Style.Resources>
                <Setter Property="Stylus.IsPressAndHoldEnabled">
                  <Setter.Value>
                    <s:Boolean>False</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="UIElement.Focusable">
                  <Setter.Value>
                    <s:Boolean>False</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.OverridesDefaultStyle">
                  <Setter.Value>
                    <s:Boolean>True</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background">
                  <Setter.Value>
                    <Binding Path="Background" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                  </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderThickness">
                  <Setter.Value>
                    <Thickness>1,1,1,1</Thickness>
                  </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush">
                  <Setter.Value>
                    <SolidColorBrush>#00000000</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground">
                  <Setter.Value>
                    <Binding Path="Foreground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                  </Setter.Value>
                </Setter>
                <Setter Property="Slider.IsSnapToTickEnabled">
                  <Setter.Value>
                    <s:Boolean>True</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="UIElement.RenderTransformOrigin">
                  <Setter.Value>
                    <Point>0.5,0.5</Point>
                  </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.MinWidth">
                  <Setter.Value>
                    <s:Double>50</s:Double>
                  </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.MinHeight">
                  <Setter.Value>
                    <s:Double>0</s:Double>
                  </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Width">
                  <Setter.Value>
                    <s:Double>NaN</s:Double>
                  </Setter.Value>
                </Setter>
                <Setter Property="Control.Padding">
                  <Setter.Value>
                    <Thickness>2,0,2,0</Thickness>
                  </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Height">
                  <Setter.Value>
                    <s:Double>NaN</s:Double>
                  </Setter.Value>
                </Setter>
                <Setter Property="UIElement.Opacity">
                  <Setter.Value>
                    <s:Double>0.75</s:Double>
                  </Setter.Value>
                </Setter>
                <Setter Property="RepeatButton.Delay">
                  <Setter.Value>
                    <s:Int32>1000</s:Int32>
                  </Setter.Value>
                </Setter>
                <Setter Property="RepeatButton.Interval">
                  <Setter.Value>
                    <s:Int32>250</s:Int32>
                  </Setter.Value>
                </Setter>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                      <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF" x:Uid="Border_45">
                        <Grid x:Uid="Grid_22" ClipToBounds="False">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                          </Grid.ColumnDefinitions>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                          </Grid.RowDefinitions>
                          <TickBar Fill="{TemplateBinding TextElement.Foreground}" Placement="Top" Name="TopTick" Height="4" x:Uid="TickBar_1" Visibility="Collapsed" Grid.Row="0" />
                          <Border CornerRadius="2,2,2,2" Background="{TemplateBinding TextElement.Foreground}" Height="2" Opacity="0.5" x:Uid="Border_46" Grid.Row="1" />
                          <Canvas Height="4" VerticalAlignment="Center" x:Uid="Canvas_7" Grid.Row="1">
                            <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Name="PART_SelectionRange" Height="2" x:Uid="Rectangle_17" Visibility="Hidden" Canvas.Top="1" />
                          </Canvas>
                          <Track Name="PART_Track" x:Uid="PART_Track" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                              <RepeatButton x:Uid="RepeatButton_1">
                                <RepeatButton.Command>
                                  <RoutedCommand />
                                </RepeatButton.Command>
                                <RepeatButton.Style>
                                  <Style TargetType="RepeatButton">
                                    <Style.Resources>
                                      <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                      <Setter.Value>
                                        <s:Boolean>True</s:Boolean>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="KeyboardNavigation.IsTabStop">
                                      <Setter.Value>
                                        <s:Boolean>False</s:Boolean>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="UIElement.Focusable">
                                      <Setter.Value>
                                        <s:Boolean>False</s:Boolean>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="Control.Template">
                                      <Setter.Value>
                                        <ControlTemplate TargetType="RepeatButton">
                                          <Border Background="#00FFFFFF" x:Uid="Border_43" />
                                        </ControlTemplate>
                                      </Setter.Value>
                                    </Setter>
                                  </Style>
                                </RepeatButton.Style>
                              </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                              <Thumb Background="{TemplateBinding Panel.Background}" x:Uid="Thumb_5">
                                <Thumb.Style>
                                  <Style TargetType="Thumb">
                                    <Style.Resources>
                                      <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="Panel.Background">
                                      <Setter.Value>
                                        <Binding Path="Background" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="UIElement.Focusable">
                                      <Setter.Value>
                                        <s:Boolean>False</s:Boolean>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                      <Setter.Value>
                                        <s:Boolean>True</s:Boolean>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="FrameworkElement.Cursor">
                                      <Setter.Value>
                                        <Cursor>Hand</Cursor>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="Control.Padding">
                                      <Setter.Value>
                                        <Thickness>6,6,6,6</Thickness>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="Control.Template">
                                      <Setter.Value>
                                        <ControlTemplate TargetType="Thumb">
                                          <Border Padding="0,0,0,0" Background="#00FFFFFF" Margin="-2,-2,-2,-2" x:Uid="Border_44">
                                            <Viewbox Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" x:Uid="Viewbox_4">
                                              <Viewbox.LayoutTransform>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                              </Viewbox.LayoutTransform>
                                              <Canvas Width="13" Height="17" x:Uid="Canvas_6">
                                                <Path Fill="{x:Null}" x:Uid="Path_13">
                                                  <Path.Data>
                                                    <PathGeometry FillRule="Nonzero" Figures="M1,0L10,0L11,1L11,13L6.5,17L4.5,17L0,13L0,1L1,0z" />
                                                  </Path.Data>
                                                </Path>
                                                <Path Stroke="{TemplateBinding Panel.Background}" StrokeThickness="0.75" StrokeEndLineCap="Round" StrokeDashCap="Round" StrokeLineJoin="Round" StrokeMiterLimit="1" x:Uid="Path_14">
                                                  <Path.Data>
                                                    <PathGeometry FillRule="Nonzero" Figures="M1,0L10,0L11,1L11,13L6.5,17L4.5,17L0,13L0,1L1,0z" />
                                                  </Path.Data>
                                                  <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                      <LinearGradientBrush.GradientStops>
                                                        <GradientStop Color="#CC999999" Offset="0.5" />
                                                        <GradientStop Color="#CCFFFFFF" Offset="0.8" />
                                                        <GradientStop Color="#CCFFFFFF" Offset="0.2" />
                                                      </LinearGradientBrush.GradientStops>
                                                      <LinearGradientBrush.RelativeTransform>
                                                        <TransformGroup>
                                                          <TransformGroup.Children>
                                                            <TranslateTransform X="-0.5" Y="-0.5" />
                                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                                            <SkewTransform AngleX="0" AngleY="0" />
                                                            <RotateTransform Angle="110" />
                                                            <TranslateTransform X="0.5" Y="0.5" />
                                                          </TransformGroup.Children>
                                                        </TransformGroup>
                                                      </LinearGradientBrush.RelativeTransform>
                                                    </LinearGradientBrush>
                                                  </Path.Fill>
                                                </Path>
                                              </Canvas>
                                            </Viewbox>
                                          </Border>
                                        </ControlTemplate>
                                      </Setter.Value>
                                    </Setter>
                                  </Style>
                                </Thumb.Style>
                              </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                              <RepeatButton x:Uid="RepeatButton_2">
                                <RepeatButton.Command>
                                  <RoutedCommand />
                                </RepeatButton.Command>
                                <RepeatButton.Style>
                                  <Style TargetType="RepeatButton">
                                    <Style.Resources>
                                      <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                      <Setter.Value>
                                        <s:Boolean>True</s:Boolean>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="KeyboardNavigation.IsTabStop">
                                      <Setter.Value>
                                        <s:Boolean>False</s:Boolean>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="UIElement.Focusable">
                                      <Setter.Value>
                                        <s:Boolean>False</s:Boolean>
                                      </Setter.Value>
                                    </Setter>
                                    <Setter Property="Control.Template">
                                      <Setter.Value>
                                        <ControlTemplate TargetType="RepeatButton">
                                          <Border Background="#00FFFFFF" x:Uid="Border_43" />
                                        </ControlTemplate>
                                      </Setter.Value>
                                    </Setter>
                                  </Style>
                                </RepeatButton.Style>
                              </RepeatButton>
                            </Track.IncreaseRepeatButton>
                          </Track>
                          <TickBar Fill="{TemplateBinding TextElement.Foreground}" Placement="Bottom" Name="BottomTick" Height="4" x:Uid="TickBar_2" Visibility="Collapsed" Grid.Row="2" />
                        </Grid>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="Slider.TickPlacement">
                          <Setter Property="UIElement.Visibility" TargetName="TopTick">
                            <Setter.Value>
                              <x:Static Member="Visibility.Visible" />
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <x:Static Member="TickPlacement.TopLeft" />
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="Slider.TickPlacement">
                          <Setter Property="UIElement.Visibility" TargetName="BottomTick">
                            <Setter.Value>
                              <x:Static Member="Visibility.Visible" />
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <x:Static Member="TickPlacement.BottomRight" />
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="Slider.TickPlacement">
                          <Setter Property="UIElement.Visibility" TargetName="TopTick">
                            <Setter.Value>
                              <x:Static Member="Visibility.Visible" />
                            </Setter.Value>
                          </Setter>
                          <Setter Property="UIElement.Visibility" TargetName="BottomTick">
                            <Setter.Value>
                              <x:Static Member="Visibility.Visible" />
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <x:Static Member="TickPlacement.Both" />
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="Slider.IsSelectionRangeEnabled">
                          <Setter Property="UIElement.Visibility" TargetName="PART_SelectionRange">
                            <Setter.Value>
                              <x:Static Member="Visibility.Visible" />
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver">
                          <Setter Property="UIElement.RenderTransform">
                            <Setter.Value>
                              <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver">
                          <Setter Property="UIElement.Opacity">
                            <Setter.Value>
                              <s:Double>1</s:Double>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="UIElement.RenderTransform">
                            <Setter.Value>
                              <ScaleTransform ScaleX="1.05" ScaleY="1.05" />
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled">
                          <Setter Property="UIElement.Opacity">
                            <Setter.Value>
                              <s:Double>0.3</s:Double>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>False</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Slider.Style>
          </Slider>
          <RepeatButton Command="IncreaseZoom" BorderBrush="{TemplateBinding Border.BorderBrush}" Foreground="{TemplateBinding TextElement.Foreground}" Width="{TemplateBinding TextElement.FontSize}" Height="{TemplateBinding TextElement.FontSize}" ToolTip="增大缩放比例" x:Uid="RepeatButton_8" IsEnabled="{TemplateBinding FlowDocumentScrollViewer.CanIncreaseZoom}" Grid.Column="2">
            <RepeatButton.Style>
              <Style TargetType="RepeatButton">
                <Style.BasedOn>
                  <Style TargetType="RepeatButton">
                    <Style.BasedOn>
                      <Style TargetType="ButtonBase">
                        <Style.Triggers>
                          <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="UIElement.Opacity">
                              <Setter.Value>
                                <s:Double>0.3</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="UIElement.Opacity">
                              <Setter.Value>
                                <s:Double>1</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </Style.Triggers>
                        <Style.Resources>
                          <ResourceDictionary />
                        </Style.Resources>
                        <Setter Property="UIElement.Focusable">
                          <Setter.Value>
                            <s:Boolean>False</s:Boolean>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="UIElement.Opacity">
                          <Setter.Value>
                            <s:Double>0.5</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.Cursor">
                          <Setter.Value>
                            <Cursor>Hand</Cursor>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Panel.Background">
                          <Setter.Value>
                            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Padding">
                          <Setter.Value>
                            <Thickness>3,1,3,1</Thickness>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderBrush">
                          <Setter.Value>
                            <x:Null />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderThickness">
                          <Setter.Value>
                            <Thickness>0,0,0,0</Thickness>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.MinWidth">
                          <Setter.Value>
                            <s:Double>0</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.MinHeight">
                          <Setter.Value>
                            <s:Double>0</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="ButtonBase">
                              <Border Background="{TemplateBinding Panel.Background}" x:Uid="Border_39">
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="ContentPresenter_2" />
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsMouseOver">
                                  <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                    <Setter.Value>
                                      <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                                    </Setter.Value>
                                  </Setter>
                                  <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                  </Trigger.Value>
                                </Trigger>
                                <Trigger Property="ButtonBase.IsPressed">
                                  <Setter Property="UIElement.RenderTransform" TargetName="Content">
                                    <Setter.Value>
                                      <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                    </Setter.Value>
                                  </Setter>
                                  <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                  </Trigger.Value>
                                </Trigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </Style.BasedOn>
                    <Style.Resources>
                      <ResourceDictionary />
                    </Style.Resources>
                    <Setter Property="Control.Padding">
                      <Setter.Value>
                        <Thickness>5,5,5,5</Thickness>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="RepeatButton.Delay">
                      <Setter.Value>
                        <s:Int32>1000</s:Int32>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="RepeatButton.Interval">
                      <Setter.Value>
                        <s:Int32>250</s:Int32>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </Style.BasedOn>
                <Style.Resources>
                  <ResourceDictionary />
                </Style.Resources>
                <Setter Property="Control.Padding">
                  <Setter.Value>
                    <Thickness>0,2,2,2</Thickness>
                  </Setter.Value>
                </Setter>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                      <Border Padding="0,0,0,0" Background="#00FFFFFF" x:Uid="Border_42">
                        <Viewbox Name="Content" RenderTransformOrigin="0.5,0.5" x:Uid="Viewbox_3">
                          <Canvas Width="32" Height="32" x:Uid="Canvas_5">
                            <Path Fill="{x:Null}" Width="32" Height="32" x:Uid="Path_10">
                              <Path.Data>
                                <GeometryGroup>
                                  <GeometryGroup.Children>
                                    <EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
                                  </GeometryGroup.Children>
                                </GeometryGroup>
                              </Path.Data>
                            </Path>
                            <Path Name="Sheen" Width="32" Height="32" x:Uid="Path_11">
                              <Path.Data>
                                <GeometryGroup>
                                  <GeometryGroup.Children>
                                    <EllipseGeometry RadiusX="16" RadiusY="16" Center="16,16" />
                                  </GeometryGroup.Children>
                                </GeometryGroup>
                              </Path.Data>
                              <Path.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                  <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#99FFFFFF" Offset="0" />
                                    <GradientStop Color="#66000000" Offset="1" />
                                  </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                              </Path.Fill>
                            </Path>
                            <Path Stroke="{x:Null}" StrokeThickness="5" x:Uid="Path_12" Canvas.Left="16" Canvas.Top="16">
                              <Path.Data>
                                <GeometryGroup>
                                  <GeometryGroup.Children>
                                    <LineGeometry StartPoint="-10,0" EndPoint="10,0" />
                                    <LineGeometry StartPoint="0,-10" EndPoint="0,10" />
                                  </GeometryGroup.Children>
                                </GeometryGroup>
                              </Path.Data>
                            </Path>
                          </Canvas>
                        </Viewbox>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver">
                          <Setter Property="UIElement.RenderTransform" TargetName="Content">
                            <Setter.Value>
                              <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed">
                          <Setter Property="UIElement.RenderTransform" TargetName="Content">
                            <Setter.Value>
                              <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Shape.Fill" TargetName="Sheen">
                            <Setter.Value>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#99000000" Offset="0" />
                                  <GradientStop Color="#66FFFFFF" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </RepeatButton.Style>
            <RepeatButton.LayoutTransform>
              <ScaleTransform ScaleX="2.2" ScaleY="2.2" />
            </RepeatButton.LayoutTransform>
          </RepeatButton>
        </Grid>
      </Grid>
    </Border>
  </Grid>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
          (9) ItemsControl
             (9.1) DataGridCellsPresenter
    <?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="DataGridCellsPresenter" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <ItemsPresenter />
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
             (9.2) DataGridColumnHeadersPresenter 
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="DataGridColumnHeadersPresenter" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Grid>
    <DataGridColumnHeader Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
    <ItemsPresenter />
  </Grid>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
             (9.3) HeaderedItemsControl
                (9.3.1) MenuItem
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="MenuItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
  <Grid SnapsToDevicePixels="True">
    <Rectangle RadiusX="2" RadiusY="2" Fill="{TemplateBinding Panel.Background}" Stroke="{TemplateBinding Border.BorderBrush}" StrokeThickness="1" Name="Bg" />
    <Rectangle RadiusX="2" RadiusY="2" Name="InnerBorder" Margin="1,1,1,1" />
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" />
        <ColumnDefinition Width="4" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="37" />
        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
        <ColumnDefinition Width="17" />
      </Grid.ColumnDefinitions>
      <ContentPresenter Content="{TemplateBinding MenuItem.Icon}" ContentSource="Icon" Name="Icon" Margin="1,1,1,1" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
      <Border BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" BorderBrush="#FFCDD3E6" Background="#FFE6EFF4" Name="GlyphPanel" Width="22" Height="22" Margin="1,1,1,1" Visibility="Hidden">
        <Path Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="#FF0C12A1" Name="Glyph" Width="9" Height="11" FlowDirection="LeftToRight" />
      </Border>
      <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.Column="2" />
      <TextBlock Text="{TemplateBinding MenuItem.InputGestureText}" Margin="{TemplateBinding Control.Padding}" Grid.Column="4" />
    </Grid>
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="MenuItem.Icon">
      <Setter Property="UIElement.Visibility" TargetName="Icon">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Null />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="MenuItem.IsChecked">
      <Setter Property="UIElement.Visibility" TargetName="GlyphPanel">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="Icon">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="MenuItem.IsHighlighted">
      <Setter Property="Shape.Fill" TargetName="Bg">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="#34C5EBFF" Offset="0" />
              <GradientStop Color="#3481D8FF" Offset="1" />
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Shape.Stroke" TargetName="Bg">
        <Setter.Value>
          <SolidColorBrush>#8071CBF1</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Shape.Stroke" TargetName="InnerBorder">
        <Setter.Value>
          <SolidColorBrush>#40FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <SolidColorBrush>#FF9A9A9A</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="GlyphPanel">
        <Setter.Value>
          <SolidColorBrush>#FFEEE9E9</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="GlyphPanel">
        <Setter.Value>
          <SolidColorBrush>#FFDBD6D6</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Shape.Fill" TargetName="Glyph">
        <Setter.Value>
          <SolidColorBrush>#FF848589</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
           (9.3.2) ToolBar
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="ToolBar" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <Grid Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="True">
    <Grid Name="OverflowGrid" HorizontalAlignment="Right">
      <ToggleButton IsChecked="False" ClickMode="Press" Name="OverflowButton" FocusVisualStyle="{x:Null}" IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}">
        <ToggleButton.Style>
          <Style TargetType="ToggleButton">
            <Style.Triggers>
              <DataTrigger Binding="{Binding}" Value="true">
                <Setter Property="Panel.Background">
                  <Setter.Value>
                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                  </Setter.Value>
                </Setter>
              </DataTrigger>
            </Style.Triggers>
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Panel.Background">
              <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <LinearGradientBrush.GradientStops>
                    <GradientStop Color="#FFECECEC" Offset="0" />
                    <GradientStop Color="#FFDDDDDD" Offset="0.5" />
                    <GradientStop Color="#FFA0A0A0" Offset="1" />
                  </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.MinHeight">
              <Setter.Value>
                <s:Double>0</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.MinWidth">
              <Setter.Value>
                <s:Double>0</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                  <Border CornerRadius="0,3,3,0" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                    <Canvas Width="6" Height="7" Margin="7,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom" SnapsToDevicePixels="True">
                      <Path Data="M1,1.5L6,1.5" Stroke="#FFFFFFFF" />
                      <Path Data="M0,0.5L5,0.5" Stroke="{TemplateBinding TextElement.Foreground}" />
                      <Path Data="M0.5,4L6.5,4 3.5,7z" Fill="#FFFFFFFF" />
                      <Path Data="M-0.5,3L5.5,3 2.5,6z" Fill="{TemplateBinding TextElement.Foreground}" />
                    </Canvas>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Panel.Background" TargetName="Bd">
                        <Setter.Value>
                          <SolidColorBrush>#FFC2E0FF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsKeyboardFocused">
                      <Setter Property="Panel.Background" TargetName="Bd">
                        <Setter.Value>
                          <SolidColorBrush>#FFC2E0FF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                          <SolidColorBrush>#FFC6C3C6</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </ToggleButton.Style>
      </ToggleButton>
      <Popup IsOpen="False" Placement="Bottom" StaysOpen="False" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" AllowsTransparency="True" Name="OverflowPopup" Focusable="False">
        <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="Shdw">
          <Border BorderThickness="1,1,1,1" BorderBrush="#FF808080" Background="#FFFDFDFD" Name="ToolBarSubMenuBorder" RenderOptions.ClearTypeHint="Enabled">
            <ToolBarOverflowPanel WrapWidth="200" Name="PART_ToolBarOverflowPanel" Margin="2,2,2,2" FocusVisualStyle="{x:Null}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="True" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" />
          </Border>
        </mwt:SystemDropShadowChrome>
      </Popup>
    </Grid>
    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="MainPanelBorder">
      <Border.Style>
        <Style TargetType="Border">
          <Style.Triggers>
            <DataTrigger Binding="{Binding}" Value="true">
              <Setter Property="Border.CornerRadius">
                <Setter.Value>
                  <CornerRadius>0,0,0,0</CornerRadius>
                </Setter.Value>
              </Setter>
            </DataTrigger>
          </Style.Triggers>
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="FrameworkElement.Margin">
            <Setter.Value>
              <Thickness>0,0,11,0</Thickness>
            </Setter.Value>
          </Setter>
          <Setter Property="Border.CornerRadius">
            <Setter.Value>
              <CornerRadius>3,3,3,3</CornerRadius>
            </Setter.Value>
          </Setter>
        </Style>
      </Border.Style>
      <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
        <Thumb Padding="6,5,1,6" Name="ToolBarThumb" Width="10" Margin="-3,-1,0,0">
          <Thumb.Style>
            <Style TargetType="Thumb">
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="Thumb">
                    <Border Padding="{TemplateBinding Control.Padding}" Background="#00FFFFFF" SnapsToDevicePixels="True">
                      <Rectangle>
                        <Rectangle.Fill>
                          <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,4,4" Viewbox="0,0,4,4" TileMode="Tile">
                            <DrawingBrush.Drawing>
                              <DrawingGroup>
                                <DrawingGroup.Children>
                                  <GeometryDrawing Brush="#FFFFFFFF" Geometry="M1,1L1,3 3,3 3,1z" />
                                  <GeometryDrawing Brush="#FFC6C3C6" Geometry="M0,0L0,2 2,2 2,0z" />
                                </DrawingGroup.Children>
                              </DrawingGroup>
                            </DrawingBrush.Drawing>
                          </DrawingBrush>
                        </Rectangle.Fill>
                      </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="UIElement.IsMouseOver">
                        <Setter Property="FrameworkElement.Cursor">
                          <Setter.Value>
                            <Cursor>SizeAll</Cursor>
                          </Setter.Value>
                        </Setter>
                        <Trigger.Value>
                          <s:Boolean>True</s:Boolean>
                        </Trigger.Value>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </Thumb.Style>
        </Thumb>
        <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="ToolBarHeader" Margin="4,0,4,0" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <ToolBarPanel IsItemsHost="True" Name="PART_ToolBarPanel" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
      </DockPanel>
    </Border>
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="ToolBar.IsOverflowOpen">
      <Setter Property="UIElement.IsEnabled" TargetName="ToolBarThumb">
        <Setter.Value>
          <s:Boolean>False</s:Boolean>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="HeaderedContentControl.Header">
      <Setter Property="UIElement.Visibility" TargetName="ToolBarHeader">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Null />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="ToolBarTray.IsLocked">
      <Setter Property="UIElement.Visibility" TargetName="ToolBarThumb">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Popup.HasDropShadow" SourceName="OverflowPopup">
      <Setter Property="FrameworkElement.Margin" TargetName="Shdw">
        <Setter.Value>
          <Thickness>0,0,5,5</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.SnapsToDevicePixels" TargetName="Shdw">
        <Setter.Value>
          <s:Boolean>True</s:Boolean>
        </Setter.Value>
      </Setter>
      <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shdw">
        <Setter.Value>
          <Color>#71000000</Color>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="ToolBar.Orientation">
      <Setter Property="FrameworkElement.Margin" TargetName="Grid">
        <Setter.Value>
          <Thickness>1,3,1,1</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Style" TargetName="OverflowButton">
        <Setter.Value>
          <Style TargetType="ToggleButton">
            <Style.Triggers>
              <DataTrigger Binding="{Binding}" Value="true">
                <Setter Property="Panel.Background">
                  <Setter.Value>
                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                  </Setter.Value>
                </Setter>
              </DataTrigger>
            </Style.Triggers>
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Panel.Background">
              <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                  <LinearGradientBrush.GradientStops>
                    <GradientStop Color="#FFECECEC" Offset="0" />
                    <GradientStop Color="#FFDDDDDD" Offset="0.5" />
                    <GradientStop Color="#FFA0A0A0" Offset="1" />
                  </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.MinHeight">
              <Setter.Value>
                <s:Double>0</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.MinWidth">
              <Setter.Value>
                <s:Double>0</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                  <Border CornerRadius="0,0,3,3" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                    <Canvas Width="7" Height="6" Margin="2,7,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom" SnapsToDevicePixels="True">
                      <Path Data="M1.5,1L1.5,6" Stroke="#FFFFFFFF" />
                      <Path Data="M0.5,0L0.5,5" Stroke="{TemplateBinding TextElement.Foreground}" />
                      <Path Data="M3.5,0.5L7,3.5 4,6.5z" Fill="#FFFFFFFF" />
                      <Path Data="M3,-0.5L6,2.5 3,5.5z" Fill="{TemplateBinding TextElement.Foreground}" />
                    </Canvas>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Panel.Background" TargetName="Bd">
                        <Setter.Value>
                          <SolidColorBrush>#FFC2E0FF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsKeyboardFocused">
                      <Setter Property="Panel.Background" TargetName="Bd">
                        <Setter.Value>
                          <SolidColorBrush>#FFC2E0FF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                          <SolidColorBrush>#FFC6C3C6</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Height" TargetName="ToolBarThumb">
        <Setter.Value>
          <s:Double>10</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Width" TargetName="ToolBarThumb">
        <Setter.Value>
          <s:Double>NaN</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="ToolBarThumb">
        <Setter.Value>
          <Thickness>-1,-3,0,0</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="Control.Padding" TargetName="ToolBarThumb">
        <Setter.Value>
          <Thickness>5,6,6,1</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="ToolBarHeader">
        <Setter.Value>
          <Thickness>0,0,0,4</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="PART_ToolBarPanel">
        <Setter.Value>
          <Thickness>1,0,2,2</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb">
        <Setter.Value>
          <x:Static Member="Dock.Top" />
        </Setter.Value>
      </Setter>
      <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader">
        <Setter.Value>
          <x:Static Member="Dock.Top" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.HorizontalAlignment" TargetName="OverflowGrid">
        <Setter.Value>
          <x:Static Member="HorizontalAlignment.Stretch" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.VerticalAlignment" TargetName="OverflowGrid">
        <Setter.Value>
          <x:Static Member="VerticalAlignment.Bottom" />
        </Setter.Value>
      </Setter>
      <Setter Property="Popup.Placement" TargetName="OverflowPopup">
        <Setter.Value>
          <x:Static Member="PlacementMode.Right" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="MainPanelBorder">
        <Setter.Value>
          <Thickness>0,0,0,11</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="#FFFFFFFF" Offset="0" />
              <GradientStop Color="#FFFFFBFF" Offset="0.5" />
              <GradientStop Color="#FFF7F7F7" Offset="1" />
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="Orientation.Vertical" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
              (9.3.3) TreeViewItem
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="TreeViewItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto" MinWidth="19" />
      <ColumnDefinition Width="Auto" />
      <ColumnDefinition Width="*" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition />
    </Grid.RowDefinitions>
    <ToggleButton IsChecked="False" ClickMode="Press" Name="Expander">
      <ToggleButton.Style>
        <Style TargetType="ToggleButton">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="UIElement.Focusable">
            <Setter.Value>
              <s:Boolean>False</s:Boolean>
            </Setter.Value>
          </Setter>
          <Setter Property="FrameworkElement.Width">
            <Setter.Value>
              <s:Double>16</s:Double>
            </Setter.Value>
          </Setter>
          <Setter Property="FrameworkElement.Height">
            <Setter.Value>
              <s:Double>16</s:Double>
            </Setter.Value>
          </Setter>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="ToggleButton">
                <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                  <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                    <Path.Data>
                      <PathGeometry Figures="M0,0L0,6L6,0z" />
                    </Path.Data>
                    <Path.RenderTransform>
                      <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                    </Path.RenderTransform>
                  </Path>
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="ToggleButton.IsChecked">
                    <Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
                      <Setter.Value>
                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                      </Setter.Value>
                    </Setter>
                    <Setter Property="Shape.Fill" TargetName="ExpandPath">
                      <Setter.Value>
                        <SolidColorBrush>#FF595959</SolidColorBrush>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                      <Setter.Value>
                        <SolidColorBrush>#FF262626</SolidColorBrush>
                      </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                      <s:Boolean>True</s:Boolean>
                    </Trigger.Value>
                  </Trigger>
                  <Trigger Property="UIElement.IsMouseOver">
                    <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                      <Setter.Value>
                        <SolidColorBrush>#FF1BBBFA</SolidColorBrush>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="Shape.Fill" TargetName="ExpandPath">
                      <Setter.Value>
                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                      </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                      <s:Boolean>True</s:Boolean>
                    </Trigger.Value>
                  </Trigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="UIElement.IsMouseOver">
                        <Condition.Value>
                          <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                      </Condition>
                      <Condition Property="ToggleButton.IsChecked">
                        <Condition.Value>
                          <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                      </Condition>
                    </MultiTrigger.Conditions>
                    <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                      <Setter.Value>
                        <SolidColorBrush>#FF262626</SolidColorBrush>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="Shape.Fill" TargetName="ExpandPath">
                      <Setter.Value>
                        <SolidColorBrush>#FF595959</SolidColorBrush>
                      </Setter.Value>
                    </Setter>
                  </MultiTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </ToggleButton.Style>
    </ToggleButton>
    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True" Grid.Column="1">
      <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
    </Border>
    <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" />
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="TreeViewItem.IsExpanded">
      <Setter Property="UIElement.Visibility" TargetName="ItemsHost">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="ItemsControl.HasItems">
      <Setter Property="UIElement.Visibility" TargetName="Expander">
        <Setter.Value>
          <x:Static Member="Visibility.Hidden" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="TreeViewItem.IsSelected">
      <Setter Property="Panel.Background" TargetName="Bd">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="TreeViewItem.IsSelected">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="Selector.IsSelectionActive">
          <Condition.Value>
            <s:Boolean>False</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="Panel.Background" TargetName="Bd">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (9.4) MenuBase
               (9.4.1) ContextMenu
<< Error generating template:“ContextMenu”不能有逻辑或视觉父级。>>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
               (9.4.2) Menu
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="Menu" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
  </Border>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
               (9.5) Selector
                  (9.5.1) ComboBox
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="ComboBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Grid Name="MainGrid" SnapsToDevicePixels="True">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
    </Grid.ColumnDefinitions>
    <Popup IsOpen="False" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Margin="1,1,1,1" Grid.ColumnSpan="2">
      <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="Shdw" MinWidth="0" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
        <Border BorderThickness="1,1,1,1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Name="DropDownBorder">
          <ScrollViewer Name="DropDownScrollViewer">
            <Grid RenderOptions.ClearTypeHint="Enabled">
              <Canvas Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Rectangle Fill="{x:Null}" Name="OpaqueRect" Width="Auto" Height="Auto" />
              </Canvas>
              <ItemsPresenter Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
            </Grid>
          </ScrollViewer>
        </Border>
      </mwt:SystemDropShadowChrome>
    </Popup>
    <ToggleButton IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Grid.ColumnSpan="2">
      <ToggleButton.Style>
        <Style TargetType="ToggleButton">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="FrameworkElement.OverridesDefaultStyle">
            <Setter.Value>
              <s:Boolean>True</s:Boolean>
            </Setter.Value>
          </Setter>
          <Setter Property="KeyboardNavigation.IsTabStop">
            <Setter.Value>
              <s:Boolean>False</s:Boolean>
            </Setter.Value>
          </Setter>
          <Setter Property="UIElement.Focusable">
            <Setter.Value>
              <s:Boolean>False</s:Boolean>
            </Setter.Value>
          </Setter>
          <Setter Property="ButtonBase.ClickMode">
            <Setter.Value>
              <x:Static Member="ClickMode.Press" />
            </Setter.Value>
          </Setter>
          <Setter Property="Panel.Background">
            <Setter.Value>
              <SolidColorBrush>#00FFFFFF</SolidColorBrush>
            </Setter.Value>
          </Setter>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="ToggleButton">
                <mwt:ButtonChrome Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" Name="Chrome" SnapsToDevicePixels="True">
                  <Grid Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" HorizontalAlignment="Right">
                    <Path Data="M0,0L3.5,4 7,0z" Fill="#FF000000" Name="Arrow" Margin="3,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                  </Grid>
                </mwt:ButtonChrome>
                <ControlTemplate.Triggers>
                  <Trigger Property="ToggleButton.IsChecked">
                    <Setter Property="mwt:ButtonChrome.RenderPressed" TargetName="Chrome">
                      <Setter.Value>
                        <s:Boolean>True</s:Boolean>
                      </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                      <s:Boolean>True</s:Boolean>
                    </Trigger.Value>
                  </Trigger>
                  <Trigger Property="UIElement.IsEnabled">
                    <Setter Property="Shape.Fill" TargetName="Arrow">
                      <Setter.Value>
                        <SolidColorBrush>#FFAFAFAF</SolidColorBrush>
                      </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                      <s:Boolean>False</s:Boolean>
                    </Trigger.Value>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </ToggleButton.Style>
    </ToggleButton>
    <ContentPresenter Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" IsHitTestVisible="False" />
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
      <Setter Property="FrameworkElement.Margin" TargetName="Shdw">
        <Setter.Value>
          <Thickness>0,0,5,5</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shdw">
        <Setter.Value>
          <Color>#71000000</Color>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="ItemsControl.HasItems">
      <Setter Property="FrameworkElement.Height" TargetName="DropDownBorder">
        <Setter.Value>
          <s:Double>95</s:Double>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background">
        <Setter.Value>
          <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="ItemsControl.IsGrouping">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
          <Condition.Value>
            <s:Boolean>False</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="ScrollViewer.CanContentScroll">
        <Setter.Value>
          <s:Boolean>False</s:Boolean>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer">
      <Setter Property="Canvas.Top" TargetName="OpaqueRect">
        <Setter.Value>
          <Binding Path="VerticalOffset" ElementName="DropDownScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Left" TargetName="OpaqueRect">
        <Setter.Value>
          <Binding Path="HorizontalOffset" ElementName="DropDownScrollViewer" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
              (9.5.2) ListBox
                  (9.5.2.1) ListView
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="ListBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="1,1,1,1" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
    <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
      <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
    </ScrollViewer>
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="Panel.Background" TargetName="Bd">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="ItemsControl.IsGrouping">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
          <Condition.Value>
            <s:Boolean>False</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="ScrollViewer.CanContentScroll">
        <Setter.Value>
          <s:Boolean>False</s:Boolean>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (9.5.3) MultiSelector
                (9.5.3.1) DataGrid
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="DataGrid" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
    <ScrollViewer Name="DG_ScrollViewer" Focusable="False">
      <ScrollViewer.Template>
        <ControlTemplate TargetType="ScrollViewer">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Button Command="SelectAll" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=DataGrid, ResourceId=DataGridSelectAllButtonStyle}}" Width="Auto" Visibility="Visible" Focusable="False" />
            <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter" Visibility="Visible" Grid.Column="1" />
            <ScrollContentPresenter CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2" />
            <ScrollBar Orientation="Vertical" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Value="0" Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Grid.Column="2" Grid.Row="1" />
            <Grid Grid.Column="1" Grid.Row="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <ScrollBar Orientation="Horizontal" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Value="0" Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Grid.Column="1" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </ScrollViewer.Template>
      <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
    </ScrollViewer>
  </Border>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (9.5.4) TabControl
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="TabControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
  <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Name="ColumnDefinition0" />
      <ColumnDefinition Width="0" Name="ColumnDefinition1" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" Name="RowDefinition0" />
      <RowDefinition Height="*" Name="RowDefinition1" />
    </Grid.RowDefinitions>
    <TabPanel IsItemsHost="True" Name="HeaderPanel" Margin="2,2,2,0" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Column="0" Grid.Row="0" />
    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="0" Grid.Row="1">
      <ContentPresenter Content="{TemplateBinding TabControl.SelectedContent}" ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}" ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}" ContentSource="SelectedContent" Name="PART_SelectedContentHost" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
    </Border>
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="TabControl.TabStripPlacement">
      <Setter Property="Grid.Row" TargetName="HeaderPanel">
        <Setter.Value>
          <s:Int32>1</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="Grid.Row" TargetName="ContentPanel">
        <Setter.Value>
          <s:Int32>0</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
        <Setter.Value>
          <GridLength>*</GridLength>
        </Setter.Value>
      </Setter>
      <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
        <Setter.Value>
          <GridLength>Auto</GridLength>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
        <Setter.Value>
          <Thickness>2,0,2,2</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="Dock.Bottom" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="TabControl.TabStripPlacement">
      <Setter Property="Grid.Row" TargetName="HeaderPanel">
        <Setter.Value>
          <s:Int32>0</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="Grid.Row" TargetName="ContentPanel">
        <Setter.Value>
          <s:Int32>0</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="Grid.Column" TargetName="HeaderPanel">
        <Setter.Value>
          <s:Int32>0</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="Grid.Column" TargetName="ContentPanel">
        <Setter.Value>
          <s:Int32>1</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
        <Setter.Value>
          <GridLength>Auto</GridLength>
        </Setter.Value>
      </Setter>
      <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
        <Setter.Value>
          <GridLength>*</GridLength>
        </Setter.Value>
      </Setter>
      <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
        <Setter.Value>
          <GridLength>*</GridLength>
        </Setter.Value>
      </Setter>
      <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
        <Setter.Value>
          <GridLength>0</GridLength>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
        <Setter.Value>
          <Thickness>2,2,0,2</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="Dock.Left" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="TabControl.TabStripPlacement">
      <Setter Property="Grid.Row" TargetName="HeaderPanel">
        <Setter.Value>
          <s:Int32>0</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="Grid.Row" TargetName="ContentPanel">
        <Setter.Value>
          <s:Int32>0</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="Grid.Column" TargetName="HeaderPanel">
        <Setter.Value>
          <s:Int32>1</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="Grid.Column" TargetName="ContentPanel">
        <Setter.Value>
          <s:Int32>0</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
        <Setter.Value>
          <GridLength>*</GridLength>
        </Setter.Value>
      </Setter>
      <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
        <Setter.Value>
          <GridLength>Auto</GridLength>
        </Setter.Value>
      </Setter>
      <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
        <Setter.Value>
          <GridLength>*</GridLength>
        </Setter.Value>
      </Setter>
      <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
        <Setter.Value>
          <GridLength>0</GridLength>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
        <Setter.Value>
          <Thickness>0,2,2,2</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="Dock.Right" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (9.6) StatusBar
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="StatusBar" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
  </Border>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (9.7) TreeView
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="TreeView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Name="Bd" SnapsToDevicePixels="True">
    <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Background="{TemplateBinding Panel.Background}" Padding="{TemplateBinding Control.Padding}" Name="_tv_scrollviewer_" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False">
      <ItemsPresenter />
    </ScrollViewer>
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="Panel.Background" TargetName="Bd">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="VirtualizingPanel.IsVirtualizing">
      <Setter Property="ScrollViewer.CanContentScroll" TargetName="_tv_scrollviewer_">
        <Setter.Value>
          <s:Boolean>True</s:Boolean>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
             (10) PassworkBox
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="PasswordBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <mwt:ListBoxChrome Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" Name="Bd" SnapsToDevicePixels="True">
    <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
  </mwt:ListBoxChrome>
  <ControlTemplate.Triggers>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="Panel.Background" TargetName="Bd">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            (11) RangeBase
               (11.1) ProgressBar
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="ProgressBar" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
  <Grid Name="TemplateRoot" SnapsToDevicePixels="True">
    <Rectangle RadiusX="2" RadiusY="2" Fill="{TemplateBinding Panel.Background}" />
    <Border CornerRadius="2,2,2,2" Margin="1,1,1,1">
      <Border.Background>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <LinearGradientBrush.GradientStops>
            <GradientStop Color="#50FFFFFF" Offset="0.5385" />
            <GradientStop Color="#00FFFFFF" Offset="0.5385" />
          </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
      </Border.Background>
    </Border>
    <Border BorderThickness="1,0,1,1" BorderBrush="#80FFFFFF" Margin="1,1,1,1">
      <Border.Background>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
          <LinearGradientBrush.GradientStops>
            <GradientStop Color="#80FFFFFF" Offset="0.05" />
            <GradientStop Color="#00FFFFFF" Offset="0.25" />
          </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
      </Border.Background>
    </Border>
    <Rectangle Name="PART_Track" Margin="1,1,1,1" />
    <Decorator Name="PART_Indicator" Margin="1,1,1,1" HorizontalAlignment="Left">
      <Grid Name="Foreground">
        <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Name="Indicator" />
        <Grid Name="Animation" ClipToBounds="True">
          <Rectangle Name="PART_GlowRect" Width="100" Margin="-100,0,0,0" HorizontalAlignment="Left">
            <Rectangle.Fill>
              <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#00FFFFFF" Offset="0" />
                  <GradientStop Color="#60FFFFFF" Offset="0.4" />
                  <GradientStop Color="#60FFFFFF" Offset="0.6" />
                  <GradientStop Color="#00FFFFFF" Offset="1" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
        </Grid>
        <Grid Name="Overlay">
          <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="15" />
            <ColumnDefinition Width="0.1*" />
            <ColumnDefinition MaxWidth="15" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
          </Grid.RowDefinitions>
          <Rectangle RadiusX="1" RadiusY="1" Name="LeftDark" Margin="1,1,0,1" Grid.RowSpan="2">
            <Rectangle.Fill>
              <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#0C000000" Offset="0" />
                  <GradientStop Color="#20000000" Offset="0.3" />
                  <GradientStop Color="#00000000" Offset="1" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
          <Rectangle RadiusX="1" RadiusY="1" Name="RightDark" Margin="0,1,1,1" Grid.Column="2" Grid.RowSpan="2">
            <Rectangle.Fill>
              <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#00000000" Offset="0" />
                  <GradientStop Color="#20000000" Offset="0.7" />
                  <GradientStop Color="#0C000000" Offset="1" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
          <Rectangle Name="LeftLight" Grid.Column="0" Grid.Row="2">
            <Rectangle.Fill>
              <RadialGradientBrush RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,0.5,0.5">
                <RadialGradientBrush.GradientStops>
                  <GradientStop Color="#60FFFFC4" Offset="0" />
                  <GradientStop Color="#00FFFFC4" Offset="1" />
                </RadialGradientBrush.GradientStops>
              </RadialGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
          <Rectangle Name="CenterLight" Grid.Column="1" Grid.Row="2">
            <Rectangle.Fill>
              <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#60FFFFC4" Offset="0" />
                  <GradientStop Color="#00FFFFC4" Offset="1" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
          <Rectangle Name="RightLight" Grid.Column="2" Grid.Row="2">
            <Rectangle.Fill>
              <RadialGradientBrush RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,-0.5,0.5">
                <RadialGradientBrush.GradientStops>
                  <GradientStop Color="#60FFFFC4" Offset="0" />
                  <GradientStop Color="#00FFFFC4" Offset="1" />
                </RadialGradientBrush.GradientStops>
              </RadialGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
          <Border Name="Highlight1" Grid.ColumnSpan="3" Grid.RowSpan="2">
            <Border.Background>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#90FFFFFF" Offset="0.5385" />
                  <GradientStop Color="#00FFFFFF" Offset="0.5385" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Border.Background>
          </Border>
          <Border Name="Highlight2" Grid.ColumnSpan="3" Grid.RowSpan="2">
            <Border.Background>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#80FFFFFF" Offset="0.05" />
                  <GradientStop Color="#00FFFFFF" Offset="0.25" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Border.Background>
          </Border>
        </Grid>
      </Grid>
    </Decorator>
    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="2,2,2,2" BorderBrush="{TemplateBinding Border.BorderBrush}" />
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="ProgressBar.Orientation">
      <Setter Property="FrameworkElement.LayoutTransform" TargetName="TemplateRoot">
        <Setter.Value>
          <RotateTransform Angle="-90" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="Orientation.Vertical" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="ProgressBar.IsIndeterminate">
      <Setter Property="UIElement.Visibility" TargetName="LeftDark">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="RightDark">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="LeftLight">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="CenterLight">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="RightLight">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="Indicator">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="ProgressBar.IsIndeterminate">
      <Setter Property="Panel.Background" TargetName="Animation">
        <Setter.Value>
          <SolidColorBrush>#80B5FFA9</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
           (11.2) ScrollBar
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="ScrollBar" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <Grid Background="{TemplateBinding Panel.Background}" Name="Bg" SnapsToDevicePixels="True">
    <Grid.RowDefinitions>
      <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
      <RowDefinition Height="1E-05*" />
      <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
    </Grid.RowDefinitions>
    <RepeatButton Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" mwt:ScrollChrome.ScrollGlyph="UpArrow">
      <RepeatButton.Style>
        <Style TargetType="RepeatButton">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="FrameworkElement.OverridesDefaultStyle">
            <Setter.Value>
              <s:Boolean>True</s:Boolean>
            </Setter.Value>
          </Setter>
          <Setter Property="UIElement.Focusable">
            <Setter.Value>
              <s:Boolean>False</s:Boolean>
            </Setter.Value>
          </Setter>
          <Setter Property="KeyboardNavigation.IsTabStop">
            <Setter.Value>
              <s:Boolean>False</s:Boolean>
            </Setter.Value>
          </Setter>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="RepeatButton">
                <mwt:ScrollChrome RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" Name="Chrome" SnapsToDevicePixels="True" mwt:ScrollChrome.ScrollGlyph="{TemplateBinding mwt:ScrollChrome.ScrollGlyph}" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </RepeatButton.Style>
    </RepeatButton>
    <Track IsDirectionReversed="True" Name="PART_Track" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="1">
      <Track.DecreaseRepeatButton>
        <RepeatButton Command="ScrollBar.PageUpCommand">
          <RepeatButton.Style>
            <Style TargetType="RepeatButton">
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="FrameworkElement.OverridesDefaultStyle">
                <Setter.Value>
                  <s:Boolean>True</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="Panel.Background">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="UIElement.Focusable">
                <Setter.Value>
                  <s:Boolean>False</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="KeyboardNavigation.IsTabStop">
                <Setter.Value>
                  <s:Boolean>False</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="{TemplateBinding Panel.Background}" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" />
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </RepeatButton.Style>
        </RepeatButton>
      </Track.DecreaseRepeatButton>
      <Track.Thumb>
        <Thumb mwt:ScrollChrome.ScrollGlyph="VerticalGripper">
          <Thumb.Style>
            <Style TargetType="Thumb">
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="FrameworkElement.OverridesDefaultStyle">
                <Setter.Value>
                  <s:Boolean>True</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="KeyboardNavigation.IsTabStop">
                <Setter.Value>
                  <s:Boolean>False</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="Thumb">
                    <mwt:ScrollChrome RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding Thumb.IsDragging}" Name="Chrome" SnapsToDevicePixels="True" mwt:ScrollChrome.ScrollGlyph="{TemplateBinding mwt:ScrollChrome.ScrollGlyph}" />
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </Thumb.Style>
        </Thumb>
      </Track.Thumb>
      <Track.IncreaseRepeatButton>
        <RepeatButton Command="ScrollBar.PageDownCommand">
          <RepeatButton.Style>
            <Style TargetType="RepeatButton">
              <Style.Resources>
                <ResourceDictionary />
              </Style.Resources>
              <Setter Property="FrameworkElement.OverridesDefaultStyle">
                <Setter.Value>
                  <s:Boolean>True</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="Panel.Background">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="UIElement.Focusable">
                <Setter.Value>
                  <s:Boolean>False</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="KeyboardNavigation.IsTabStop">
                <Setter.Value>
                  <s:Boolean>False</s:Boolean>
                </Setter.Value>
              </Setter>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="{TemplateBinding Panel.Background}" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" />
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </RepeatButton.Style>
        </RepeatButton>
      </Track.IncreaseRepeatButton>
    </Track>
    <RepeatButton Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="2" mwt:ScrollChrome.ScrollGlyph="DownArrow">
      <RepeatButton.Style>
        <Style TargetType="RepeatButton">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="FrameworkElement.OverridesDefaultStyle">
            <Setter.Value>
              <s:Boolean>True</s:Boolean>
            </Setter.Value>
          </Setter>
          <Setter Property="UIElement.Focusable">
            <Setter.Value>
              <s:Boolean>False</s:Boolean>
            </Setter.Value>
          </Setter>
          <Setter Property="KeyboardNavigation.IsTabStop">
            <Setter.Value>
              <s:Boolean>False</s:Boolean>
            </Setter.Value>
          </Setter>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="RepeatButton">
                <mwt:ScrollChrome RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" Name="Chrome" SnapsToDevicePixels="True" mwt:ScrollChrome.ScrollGlyph="{TemplateBinding mwt:ScrollChrome.ScrollGlyph}" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </RepeatButton.Style>
    </RepeatButton>
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="Panel.Background" TargetName="Bg">
        <Setter.Value>
          <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
           (11.3) Slider
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="Slider" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <TickBar Fill="{TemplateBinding TextElement.Foreground}" Placement="Top" Name="TopTick" Height="4" Visibility="Collapsed" Grid.Row="0" />
      <TickBar Fill="{TemplateBinding TextElement.Foreground}" Placement="Bottom" Name="BottomTick" Height="4" Visibility="Collapsed" Grid.Row="2" />
      <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" Background="#FFE7EAEA" Name="TrackBackground" Height="4" Margin="5,0,5,0" VerticalAlignment="Center" Grid.Row="1">
        <Border.BorderBrush>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="#FFAEB1AF" Offset="0.1" />
              <GradientStop Color="#FFFFFFFF" Offset="0.9" />
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Border.BorderBrush>
        <Canvas Margin="-6,-1,-6,-1">
          <Rectangle Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" Name="PART_SelectionRange" Height="4" Visibility="Hidden" />
        </Canvas>
      </Border>
      <Track Name="PART_Track" Grid.Row="1">
        <Track.DecreaseRepeatButton>
          <RepeatButton>
            <RepeatButton.Command>
              <RoutedCommand />
            </RepeatButton.Command>
            <RepeatButton.Style>
              <Style TargetType="RepeatButton">
                <Style.Resources>
                  <ResourceDictionary />
                </Style.Resources>
                <Setter Property="FrameworkElement.OverridesDefaultStyle">
                  <Setter.Value>
                    <s:Boolean>True</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="KeyboardNavigation.IsTabStop">
                  <Setter.Value>
                    <s:Boolean>False</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="UIElement.Focusable">
                  <Setter.Value>
                    <s:Boolean>False</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                      <Rectangle Fill="#00FFFFFF" />
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </RepeatButton.Style>
          </RepeatButton>
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb Name="Thumb">
            <Thumb.Style>
              <Style TargetType="Thumb">
                <Style.Resources>
                  <ResourceDictionary />
                </Style.Resources>
                <Setter Property="UIElement.Focusable">
                  <Setter.Value>
                    <s:Boolean>False</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.OverridesDefaultStyle">
                  <Setter.Value>
                    <s:Boolean>True</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Height">
                  <Setter.Value>
                    <s:Double>22</s:Double>
                  </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Width">
                  <Setter.Value>
                    <s:Double>11</s:Double>
                  </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground">
                  <Setter.Value>
                    <SolidColorBrush>#FF808080</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                      <Canvas SnapsToDevicePixels="True">
                        <Canvas.RenderTransform>
                          <TranslateTransform X="5.5" Y="11" />
                        </Canvas.RenderTransform>
                        <Path Data="M-5,-9.5A1,1,0,0,1,-4,-10.5L4,-10.5A1,1,0,0,1,5,-9.5L5,9.5A1,1,0,0,1,4,10.5L-4,10.5A1,1,0,0,1,-5,9.5z" Name="Background">
                          <Path.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                              <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                <GradientStop Color="#FFF0EFEF" Offset="0.4" />
                                <GradientStop Color="#FFD6D5D5" Offset="0.8" />
                              </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                          </Path.Fill>
                        </Path>
                        <Path Data="M-4,-9.5L4,-9.5 4,9.5 -4,9.5z" Stroke="#FFFFFFFF" Name="InnerBorder" />
                        <Path Data="M-5,-9.5A1,1,0,0,1,-4,-10.5L4,-10.5A1,1,0,0,1,5,-9.5L5,9.5A1,1,0,0,1,4,10.5L-4,10.5A1,1,0,0,1,-5,9.5z" Stroke="#FF929292" Name="OuterBorder" />
                      </Canvas>
                      <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver">
                          <Setter Property="Shape.Fill" TargetName="Background">
                            <Setter.Value>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#FFFFFFFF" Offset="0" />
                                  <GradientStop Color="#FFB8E2F9" Offset="0.5" />
                                  <GradientStop Color="#FFB0DFF8" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                            <Setter.Value>
                              <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TextElement.Foreground">
                          <Setter Property="Shape.Fill" TargetName="Background">
                            <Setter.Value>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#FFFFFFFF" Offset="0" />
                                  <GradientStop Color="#FFB8E2F9" Offset="0.5" />
                                  <GradientStop Color="#FFB0DFF8" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                            <Setter.Value>
                              <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <SolidColorBrush>#FF0000FF</SolidColorBrush>
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="Thumb.IsDragging">
                          <Setter Property="Shape.Fill" TargetName="Background">
                            <Setter.Value>
                              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                  <GradientStop Color="#FFB8E4FA" Offset="0.25" />
                                  <GradientStop Color="#FF5EB4E3" Offset="0.5" />
                                  <GradientStop Color="#FF4C8BB4" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                              </LinearGradientBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                            <Setter.Value>
                              <SolidColorBrush>#FF2C628B</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled">
                          <Setter Property="Shape.Fill" TargetName="Background">
                            <Setter.Value>
                              <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Shape.Stroke" TargetName="InnerBorder">
                            <Setter.Value>
                              <x:Null />
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Path.Data" TargetName="OuterBorder">
                            <Setter.Value>
                              <StreamGeometry>M-5,-10.5L5,-10.5 5,10.5 -5,10.5z</StreamGeometry>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                            <Setter.Value>
                              <SolidColorBrush>#FFAEB1AF</SolidColorBrush>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>False</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Thumb.Style>
          </Thumb>
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton>
            <RepeatButton.Command>
              <RoutedCommand />
            </RepeatButton.Command>
            <RepeatButton.Style>
              <Style TargetType="RepeatButton">
                <Style.Resources>
                  <ResourceDictionary />
                </Style.Resources>
                <Setter Property="FrameworkElement.OverridesDefaultStyle">
                  <Setter.Value>
                    <s:Boolean>True</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="KeyboardNavigation.IsTabStop">
                  <Setter.Value>
                    <s:Boolean>False</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="UIElement.Focusable">
                  <Setter.Value>
                    <s:Boolean>False</s:Boolean>
                  </Setter.Value>
                </Setter>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                      <Rectangle Fill="#00FFFFFF" />
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </RepeatButton.Style>
          </RepeatButton>
        </Track.IncreaseRepeatButton>
      </Track>
    </Grid>
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="Slider.TickPlacement">
      <Setter Property="UIElement.Visibility" TargetName="TopTick">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Style" TargetName="Thumb">
        <Setter.Value>
          <Style TargetType="Thumb">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="UIElement.Focusable">
              <Setter.Value>
                <s:Boolean>False</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.OverridesDefaultStyle">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Height">
              <Setter.Value>
                <s:Double>18</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Width">
              <Setter.Value>
                <s:Double>10</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF808080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                  <Canvas SnapsToDevicePixels="True">
                    <Canvas.RenderTransform>
                      <TransformGroup>
                        <TransformGroup.Children>
                          <RotateTransform Angle="180" />
                          <TranslateTransform X="5" Y="9" />
                        </TransformGroup.Children>
                      </TransformGroup>
                    </Canvas.RenderTransform>
                    <Path Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z" Name="Background">
                      <Path.Fill>
                        <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                          <LinearGradientBrush.GradientStops>
                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                            <GradientStop Color="#FFF0EFEF" Offset="0.4" />
                            <GradientStop Color="#FFD6D5D5" Offset="0.8" />
                          </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                      </Path.Fill>
                    </Path>
                    <Path Data="M3.5,-7.5L-3.5,-7.5 -3.5,4.5 0,8 3.5,4.5z" Stroke="#FFFFFFFF" StrokeThickness="1" Name="InnerBorder" />
                    <Path Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z" Stroke="#FF929292" StrokeThickness="1" Name="OuterBorder" />
                  </Canvas>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Shape.Fill" TargetName="Background">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFFFFFFF" Offset="0" />
                              <GradientStop Color="#FFB8E2F9" Offset="0.5" />
                              <GradientStop Color="#FFB0DFF8" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                        <Setter.Value>
                          <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="TextElement.Foreground">
                      <Setter Property="Shape.Fill" TargetName="Background">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFFFFFFF" Offset="0" />
                              <GradientStop Color="#FFB8E2F9" Offset="0.5" />
                              <GradientStop Color="#FFB0DFF8" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                        <Setter.Value>
                          <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <SolidColorBrush>#FF0000FF</SolidColorBrush>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="Thumb.IsDragging">
                      <Setter Property="Shape.Fill" TargetName="Background">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFB8E4FA" Offset="0.25" />
                              <GradientStop Color="#FF5EB4E3" Offset="0.5" />
                              <GradientStop Color="#FF4C8BB4" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                        <Setter.Value>
                          <SolidColorBrush>#FF2C628B</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Shape.Fill" TargetName="Background">
                        <Setter.Value>
                          <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="InnerBorder">
                        <Setter.Value>
                          <x:Null />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Path.Data" TargetName="OuterBorder">
                        <Setter.Value>
                          <StreamGeometry>M-5,-10.5L5,-10.5 5,10.5 -5,10.5z</StreamGeometry>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                        <Setter.Value>
                          <SolidColorBrush>#FFAEB1AF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Path.Data" TargetName="OuterBorder">
                        <Setter.Value>
                          <StreamGeometry>M4.5,-8.5L-4.5,-8.5 -4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z</StreamGeometry>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="TrackBackground">
        <Setter.Value>
          <Thickness>5,2,5,0</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="TickPlacement.TopLeft" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Slider.TickPlacement">
      <Setter Property="UIElement.Visibility" TargetName="BottomTick">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Style" TargetName="Thumb">
        <Setter.Value>
          <Style TargetType="Thumb">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="UIElement.Focusable">
              <Setter.Value>
                <s:Boolean>False</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.OverridesDefaultStyle">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Height">
              <Setter.Value>
                <s:Double>18</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Width">
              <Setter.Value>
                <s:Double>10</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF808080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                  <Canvas SnapsToDevicePixels="True">
                    <Canvas.RenderTransform>
                      <TranslateTransform X="5" Y="9" />
                    </Canvas.RenderTransform>
                    <Path Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z" Name="Background">
                      <Path.Fill>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                          <LinearGradientBrush.GradientStops>
                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                            <GradientStop Color="#FFF0EFEF" Offset="0.4" />
                            <GradientStop Color="#FFD6D5D5" Offset="0.8" />
                          </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                      </Path.Fill>
                    </Path>
                    <Path Data="M3.5,-7.5L-3.5,-7.5 -3.5,4.5 0,8 3.5,4.5z" Stroke="#FFFFFFFF" StrokeThickness="1" Name="InnerBorder" />
                    <Path Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z" Stroke="#FF929292" StrokeThickness="1" Name="OuterBorder" />
                  </Canvas>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Shape.Fill" TargetName="Background">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFFFFFFF" Offset="0" />
                              <GradientStop Color="#FFB8E2F9" Offset="0.5" />
                              <GradientStop Color="#FFB0DFF8" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                        <Setter.Value>
                          <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="TextElement.Foreground">
                      <Setter Property="Shape.Fill" TargetName="Background">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFFFFFFF" Offset="0" />
                              <GradientStop Color="#FFB8E2F9" Offset="0.5" />
                              <GradientStop Color="#FFB0DFF8" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                        <Setter.Value>
                          <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <SolidColorBrush>#FF0000FF</SolidColorBrush>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="Thumb.IsDragging">
                      <Setter Property="Shape.Fill" TargetName="Background">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFB8E4FA" Offset="0.25" />
                              <GradientStop Color="#FF5EB4E3" Offset="0.5" />
                              <GradientStop Color="#FF4C8BB4" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                        <Setter.Value>
                          <SolidColorBrush>#FF2C628B</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Shape.Fill" TargetName="Background">
                        <Setter.Value>
                          <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="InnerBorder">
                        <Setter.Value>
                          <x:Null />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Path.Data" TargetName="OuterBorder">
                        <Setter.Value>
                          <StreamGeometry>M-5,-10.5L5,-10.5 5,10.5 -5,10.5z</StreamGeometry>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                        <Setter.Value>
                          <SolidColorBrush>#FFAEB1AF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Path.Data" TargetName="OuterBorder">
                        <Setter.Value>
                          <StreamGeometry>M4.5,-8.5L-4.5,-8.5 -4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z</StreamGeometry>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="TrackBackground">
        <Setter.Value>
          <Thickness>5,0,5,2</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="TickPlacement.BottomRight" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Slider.TickPlacement">
      <Setter Property="UIElement.Visibility" TargetName="TopTick">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="BottomTick">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Static Member="TickPlacement.Both" />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Slider.IsSelectionRangeEnabled">
      <Setter Property="UIElement.Visibility" TargetName="PART_SelectionRange">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsKeyboardFocused">
      <Setter Property="TextElement.Foreground" TargetName="Thumb">
        <Setter.Value>
          <SolidColorBrush>#FF0000FF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
         (12) ResizeGrip
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="ResizeGrip" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Grid Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
    <Path Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z" Margin="0,0,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom">
      <Path.Fill>
        <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
          <DrawingBrush.Drawing>
            <DrawingGroup>
              <DrawingGroup.Children>
                <GeometryDrawing Geometry="M0,0L2,0 2,2 0,2z">
                  <GeometryDrawing.Brush>
                    <LinearGradientBrush StartPoint="0,0.25" EndPoint="1,0.75">
                      <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#FFFFFFFF" Offset="0.3" />
                        <GradientStop Color="#FFBBC5D7" Offset="0.75" />
                        <GradientStop Color="#FF6D83A9" Offset="1" />
                      </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </GeometryDrawing.Brush>
                </GeometryDrawing>
              </DrawingGroup.Children>
            </DrawingGroup>
          </DrawingBrush.Drawing>
        </DrawingBrush>
      </Path.Fill>
    </Path>
  </Grid>
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
           (13) Separator
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="Separator" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Height="1" SnapsToDevicePixels="True" />
</ControlTemplate>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
           (14) StickyNoteControl
<< Error generating template:未将对象引用设置到对象的实例。>>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
           (15) TextBoxBase
             (15.1) RichTextBox
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="TextBoxBase" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <mwt:ListBoxChrome Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" Name="Bd" SnapsToDevicePixels="True">
    <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
  </mwt:ListBoxChrome>
  <ControlTemplate.Triggers>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="Panel.Background" TargetName="Bd">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
             (15.2) TextBox
                (15.2.1) DatePickerTextBox
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="DatePickerTextBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Grid>
    <Grid.Resources>
      <SolidColorBrush x:Key="ê">#FFAAAAAA</SolidColorBrush>
    </Grid.Resources>
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup Name="CommonStates" />
      <VisualStateGroup Name="WatermarkStates" />
      <VisualStateGroup Name="FocusStates" />
    </VisualStateManager.VisualStateGroups>
    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" CornerRadius="1,1,1,1" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Border" Opacity="1">
      <Grid Name="WatermarkContent" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
        <Border BorderThickness="1,1,1,1" BorderBrush="#FFFFFFFF" Name="ContentElement" />
        <Border BorderThickness="1,1,1,1" BorderBrush="#FFFFFFFF" Name="watermark_decorator">
          <ContentControl Padding="2,2,2,2" Name="PART_Watermark" Opacity="0" IsHitTestVisible="False" Focusable="False" />
        </Border>
        <ScrollViewer HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Name="PART_ContentHost" Margin="0,0,0,0" />
        <Border CornerRadius="1,1,1,1" BorderBrush="#FF45D6FA" Name="FocusVisual" Opacity="0" IsHitTestVisible="False" />
      </Grid>
    </Border>
  </Grid>
</ControlTemplate>
     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
             (16) Thumb
                (16.1) GridSplitter
<?xml version="1.0" encoding="utf-16"?>
<ControlTemplate TargetType="GridSplitter" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" />
</ControlTemplate>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------























